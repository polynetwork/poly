package polygon

import (
	"encoding/hex"
	"encoding/json"
	"testing"

	ethTypes "github.com/ethereum/go-ethereum/core/types"
	"github.com/ontio/ontology-crypto/keypair"
	"github.com/polynetwork/poly/account"
	"github.com/polynetwork/poly/common"
	vconfig "github.com/polynetwork/poly/consensus/vbft/config"
	"github.com/polynetwork/poly/core/genesis"
	"github.com/polynetwork/poly/core/states"
	"github.com/polynetwork/poly/core/store/leveldbstore"
	"github.com/polynetwork/poly/core/store/overlaydb"
	"github.com/polynetwork/poly/core/types"
	"github.com/polynetwork/poly/native"
	"github.com/polynetwork/poly/native/service/governance/node_manager"
	"github.com/polynetwork/poly/native/service/governance/side_chain_manager"
	scom "github.com/polynetwork/poly/native/service/header_sync/common"
	polygonTypes "github.com/polynetwork/poly/native/service/header_sync/polygon/types"
	"github.com/polynetwork/poly/native/service/utils"
	"github.com/polynetwork/poly/native/storage"
	"gotest.tools/assert"
)

var (
	acct     = account.NewAccount("")
	setBKers = func() {
		genesis.GenesisBookkeepers = []keypair.PublicKey{acct.PublicKey}
	}
	heimdalChainID = uint64(2)
	borChainID     = uint64(3)
)

func init() {
	setBKers()
}

func NewNative(args []byte, tx *types.Transaction, db *storage.CacheDB) (service *native.NativeService, err error) {
	shouldInit := db == nil
	if db == nil {
		store, _ := leveldbstore.NewMemLevelDBStore()
		db = storage.NewCacheDB(overlaydb.NewOverlayDB(store))
		sink := common.NewZeroCopySink(nil)
		view := &node_manager.GovernanceView{
			TxHash: common.UINT256_EMPTY,
			Height: 0,
			View:   0,
		}
		view.Serialization(sink)
		db.Put(utils.ConcatKey(utils.NodeManagerContractAddress, []byte(node_manager.GOVERNANCE_VIEW)), states.GenRawStorageItem(sink.Bytes()))

		peerPoolMap := &node_manager.PeerPoolMap{
			PeerPoolMap: map[string]*node_manager.PeerPoolItem{
				vconfig.PubkeyID(acct.PublicKey): {
					Address:    acct.Address,
					Status:     node_manager.ConsensusStatus,
					PeerPubkey: vconfig.PubkeyID(acct.PublicKey),
					Index:      0,
				},
			},
		}
		sink.Reset()
		peerPoolMap.Serialization(sink)
		db.Put(utils.ConcatKey(utils.NodeManagerContractAddress,
			[]byte(node_manager.PEER_POOL), utils.GetUint32Bytes(0)), states.GenRawStorageItem(sink.Bytes()))

	}
	service, err = native.NewNativeService(db, tx, 0, 0, common.Uint256{0}, 0, args, false)
	if err != nil {
		return
	}
	if shouldInit {
		err = side_chain_manager.PutSideChain(service, &side_chain_manager.SideChain{
			ChainId: heimdalChainID,
		})
		if err != nil {
			return
		}
		extraInfo := ExtraInfo{
			Sprint:           64,
			Period:           2,
			ProducerDelay:    6,
			BackupMultiplier: 2,
			HeimdallChainID:  heimdalChainID,
		}
		extraInfoBytes, _ := json.Marshal(extraInfo)
		err = side_chain_manager.PutSideChain(service, &side_chain_manager.SideChain{
			ChainId:   borChainID,
			ExtraInfo: extraInfoBytes,
		})
		if err != nil {
			return
		}
	}
	return
}

func TestHeimdall(t *testing.T) {
	var (
		native *native.NativeService
		err    error
	)

	handler := NewHeimdallHandler()

	{
		// block 1000
		heimdallGenesisHeaderBytes, _ := hex.DecodeString("0ab0020a02080a120c6865696d64616c6c2d31333718e807220c08f3becaf60510fbcd8ff20230383a480a208d86909b261ec95f2d4f7b2ee5b20fe5be8ec6f345c914c4d7b6e56b14cf2c19122408011220f994277244f6cdddc461ce887147a4a7318edd0ea0e86bd2e9ad524c33edf7c942203d29da6d4d1c286f23ed15867a59ea81753cbb6a1ff1ba751b7d32db1e606d8d52204dd3b4692add1dc3843947486ab99442fe79a4c3bfbfe3d24aa9e249b9a78c115a204dd3b4692add1dc3843947486ab99442fe79a4c3bfbfe3d24aa9e249b9a78c11622081ba6261d0077795e489737675de120cc9170adccaad805e12ef2708a2e214536a20e7ce47169e2337d3646f60cad3e1d33dc8da03eb360393ad94244958df0657d0820114b702f1c9154ac9c08da247a8e30ee6f2f3373f4112e00a0a480a20a37b6814ca79b6cf9783f37592a9eaf039cc8c840b3009898353e1eecd738d95122408011220086285cf29972d1f6ed0e50ffff2b186882f228e0c13d9e023f3fdb9b1876f3a12b601080210e80722480a20a37b6814ca79b6cf9783f37592a9eaf039cc8c840b3009898353e1eecd738d95122408011220086285cf29972d1f6ed0e50ffff2b186882f228e0c13d9e023f3fdb9b1876f3a2a0c08f9becaf6051098b09d990132140375b2fc7140977c9c76d45421564e354ed4227742419a3e2853f2c0deb69fc5697b60623ad5f5af8f37a0703413cb530d1de1a6a55b208edc64847872dc627576bebb8b7ebbd42164cc7b4f5f31e488f6e13996b9180112b801080210e80722480a20a37b6814ca79b6cf9783f37592a9eaf039cc8c840b3009898353e1eecd738d95122408011220086285cf29972d1f6ed0e50ffff2b186882f228e0c13d9e023f3fdb9b1876f3a2a0c08f9becaf60510dddbbc9801321442eefcda06ead475cde3731b8eb138e88cd0bac338014241a8d780c3bddaaf745f6005230a0067f973d0870a73d923c31fea73fb53569fe05332c23bd8cb855df312a7f459d344d6945d9c07498832280d89199646c3f93d0112b701080210e80722480a20a37b6814ca79b6cf9783f37592a9eaf039cc8c840b3009898353e1eecd738d95122408011220086285cf29972d1f6ed0e50ffff2b186882f228e0c13d9e023f3fdb9b1876f3a2a0b08f9becaf60510e6f0ed2832145973918275c01f50555d44e92c9d9b353cadad5438024241fd1e3ec74a6e8a968f1a8b64d56de941e61f3d1e2d3e293904ab561f572c83402aa5995fc5501b6eae3c405959df40951be657d74e1a147ba0b737a77809c39e0112b701080210e80722480a20a37b6814ca79b6cf9783f37592a9eaf039cc8c840b3009898353e1eecd738d95122408011220086285cf29972d1f6ed0e50ffff2b186882f228e0c13d9e023f3fdb9b1876f3a2a0b08f9becaf60510cba6cc2b32147fcd58c2d53d980b247f1612fdba93e9a76193e638034241527e63d6661c7241480810925b4648a848c3b6f1cdec23e35620ded49f2e4b343057d151c864a0606fc198be28fd94ee11f40bc6b9bf9c451701cbcf8e74e55c0012b701080210e80722480a20a37b6814ca79b6cf9783f37592a9eaf039cc8c840b3009898353e1eecd738d95122408011220086285cf29972d1f6ed0e50ffff2b186882f228e0c13d9e023f3fdb9b1876f3a2a0b08f9becaf60510cb87df2b3214b702f1c9154ac9c08da247a8e30ee6f2f3373f4138044241c5782bbc1850ebfb34df0674234b4850ca027dc84ffc2c53c190bfd69c745b3b4e1a896050d6b0bc7ea26c14f69b326f26053bf691cc25c1c67f3f67f65983070112b701080210e80722480a20a37b6814ca79b6cf9783f37592a9eaf039cc8c840b3009898353e1eecd738d95122408011220086285cf29972d1f6ed0e50ffff2b186882f228e0c13d9e023f3fdb9b1876f3a2a0b08f9becaf60510c5dadc2b3214b8bb158b93c94ed35c1970d610d1e2b34e26652c38054241fda7db105b2512c0a493f3676b9c5b45ce9923c0a03ce8028ce6214b60c37c6d62a720d286778a925ddca2750020256f28b468715e889213d547fdc9ac731cf10112b701080210e80722480a20a37b6814ca79b6cf9783f37592a9eaf039cc8c840b3009898353e1eecd738d95122408011220086285cf29972d1f6ed0e50ffff2b186882f228e0c13d9e023f3fdb9b1876f3a2a0b08f9becaf60510cf99f82b3214f84c74dea96df0ec22e11e7c33996c73fcc2d8223806424184d70e08200423bd225a05cae405a4fadf9c57d0601f1243680ebc1127e45c602893bc476bb21936399371e46c0bae5ba19189f831ab1bfa507d69e703e6dc44011a6c0a140375b2fc7140977c9c76d45421564e354ed422771246eb5ae987410447ed13442b485dd6990efc01d4297d798e90d3fa8467dd9c2f50ffe3238c8bf722f6c774f584b5fe91364b7b430c5a24fe57aca48665cf778030266f2c452bd918904e20f0b1ffffffffffffff011a6c0a1442eefcda06ead475cde3731b8eb138e88cd0bac31246eb5ae98741043522a004012c9740703f676b95b5121edd7237fb0f182c3c45e7c7a77eaa67a20e6d0ac025d5bd96295bf95e2e875ab2a9da5c0e547b7d00ca7ede33c1b0389318904e20f0b1ffffffffffffff011a6c0a145973918275c01f50555d44e92c9d9b353cadad541246eb5ae98741043c53ea6e1964e0670dc9ac72b3224207885d4c5f08cabe1e1080c662fdec278e7e833798757cb5cf121447dcd02a15f010eb4aa87cceecb23daa4bf904112e7718904e20f0b1ffffffffffffff011a6c0a147fcd58c2d53d980b247f1612fdba93e9a76193e61246eb5ae987410479efe8c50b1f9923f48a467ecac0a64c2d6bcaa9ae67e135df84cac5aed5321f9cbb29c115f26dc84f2ef0e5fea29615848c79d690cb205cc10d688324ae8bce18904e20f0b1ffffffffffffff011a6c0a14b702f1c9154ac9c08da247a8e30ee6f2f3373f411246eb5ae9874104b4e1d56b3429f7756452426be611e595debcb858d59f47d29ec9dd6e4b547dce1539f9b7144420bc309de496b70d6dc5f13345eee85e6b7fb332cd9f364ef12f18904e20f0b1ffffffffffffff011a6c0a14b8bb158b93c94ed35c1970d610d1e2b34e26652c1246eb5ae9874104d6b06c725f5410e4ccbd65906ece180364ebea4902b21232c1fb5892a76be7eec22480397d6bf653e9abe7ac50435ee472b59364fe78b17acb2be2116f92a76f18904e20f0b1ffffffffffffff011a650a14f84c74dea96df0ec22e11e7c33996c73fcc2d8221246eb5ae98741040600efda73e1404b0c596e08c78c5ed51631fc173e5f39d21deeddd5712fcd7d6d440c53d211eb48b03063a05b2c0c0eb084053dfcf1c6540def705c8e02845618904e20e0d403")
		param := new(scom.SyncGenesisHeaderParam)
		param.ChainID = heimdalChainID
		param.GenesisHeader = heimdallGenesisHeaderBytes
		sink := common.NewZeroCopySink(nil)
		param.Serialization(sink)

		tx := &types.Transaction{
			SignedAddr: []common.Address{acct.Address},
		}

		native, err = NewNative(sink.Bytes(), tx, nil)
		assert.NilError(t, err)
		err = handler.SyncGenesisHeader(native)
		if err != nil {
			t.Fatal("SyncGenesisHeader fail", err)
		}
	}
	{
		// block 1589
		moreHeaderBytes, _ := hex.DecodeString("0af6020a02080a120c6865696d64616c6c2d31333718b50c220c0892d8caf60510b9d0b2f301280130523a480a20975eaaa5b8d23a88b107b846fbd68348e78efaa57c2d2e291fbb758503c34fef122408011220e7ef4ed3a3c0daa13a638946c58c2700251e2289fe6f3d6f7dfb90165c486eb74220f4cee00ec3156ccbd5a54d75769dbdf88970526dbceed7f559d3af19f44d4fd34a200522d72338efcee07dfaa2eef01ce077f73a4d19e5fbad3a10e3d945ec0e8a8a52204dd3b4692add1dc3843947486ab99442fe79a4c3bfbfe3d24aa9e249b9a78c115a20589e0a44c5a2ec502a77e9284c818cbb59459cd66bd55f7589e8ff8a3fc6b89f622081ba6261d0077795e489737675de120cc9170adccaad805e12ef2708a2e214536a206caa66ab079e39c83bbdb7867d15cf0fd85ce7314047fff1da64ddcb4910618a7220ce2068ccef2788f875108e0c2f21b65f72648c46f1d2db6e8655b4c2492482e2820114b8bb158b93c94ed35c1970d610d1e2b34e26652c12e80c0a480a20aeb4c6383c6de9468d4d50e1b0a2f9e8080bf97bc4d7412bb154f05c34e645b21224080112205a1ba9cd51a01d6cf3286c96ceb4db0e3242077e64be63cee18d4e271390c85b12db01080210b50c22480a20aeb4c6383c6de9468d4d50e1b0a2f9e8080bf97bc4d7412bb154f05c34e645b21224080112205a1ba9cd51a01d6cf3286c96ceb4db0e3242077e64be63cee18d4e271390c85b2a0b0898d8caf60510efa1a54a32140375b2fc7140977c9c76d45421564e354ed422774241a36e96833f40719c91e0ba3f5b61ea4d0060541bcfd1202b2bafad5a60aaa10c5587cede9ed8d3097c0b0d0684071195e5f729c63a3ca4ad1be00bbe28c1894e004a240a20822ae0281a2ef8c6950970c94f9020d3df853bc800d30c509ef6dd4d94faf1bd100112dd01080210b50c22480a20aeb4c6383c6de9468d4d50e1b0a2f9e8080bf97bc4d7412bb154f05c34e645b21224080112205a1ba9cd51a01d6cf3286c96ceb4db0e3242077e64be63cee18d4e271390c85b2a0b0898d8caf60510cdfbf049321442eefcda06ead475cde3731b8eb138e88cd0bac33801424155cbf0f735631cfcdd6e8b6e82a3c995adb5470c2f1d03a44d3bc720f8e6f82c46578115c79def2ed60db8a2518692cc6e37be9adbafe83f02c6ace3ecfe3a2d014a240a20822ae0281a2ef8c6950970c94f9020d3df853bc800d30c509ef6dd4d94faf1bd100112dd01080210b50c22480a20aeb4c6383c6de9468d4d50e1b0a2f9e8080bf97bc4d7412bb154f05c34e645b21224080112205a1ba9cd51a01d6cf3286c96ceb4db0e3242077e64be63cee18d4e271390c85b2a0b0898d8caf60510c3a2a70a32145973918275c01f50555d44e92c9d9b353cadad5438024241181fa7324c2325219c92f81c021fa65680e45aa93f03fd7f857aca75213c48e97b45f02ee54da091e8a55f800c09dc178e53a30d13d7534ee0286341902b4b42004a240a20822ae0281a2ef8c6950970c94f9020d3df853bc800d30c509ef6dd4d94faf1bd100112dd01080210b50c22480a20aeb4c6383c6de9468d4d50e1b0a2f9e8080bf97bc4d7412bb154f05c34e645b21224080112205a1ba9cd51a01d6cf3286c96ceb4db0e3242077e64be63cee18d4e271390c85b2a0b0898d8caf60510dacc9a0b32147fcd58c2d53d980b247f1612fdba93e9a76193e638034241426e3912627e1c212ca5c865f1ea7f34bda32f5c5d2b4804568276a61819e6e95d781c3abecc25a991cf95abb8cb7b812aa5e1a3ac252ed9a7874e6eca23d90b004a240a20822ae0281a2ef8c6950970c94f9020d3df853bc800d30c509ef6dd4d94faf1bd100112dd01080210b50c22480a20aeb4c6383c6de9468d4d50e1b0a2f9e8080bf97bc4d7412bb154f05c34e645b21224080112205a1ba9cd51a01d6cf3286c96ceb4db0e3242077e64be63cee18d4e271390c85b2a0b0898d8caf6051081b2f10a3214b702f1c9154ac9c08da247a8e30ee6f2f3373f4138044241de5faed7e16a9c093eb9c8784c36314ae667699c8c6ec0705c3fabdd0f21f37a68bcc33906bc9fca8e051f10088be58de7e54668d75f9bc2c0432a503ff13d1a014a240a20822ae0281a2ef8c6950970c94f9020d3df853bc800d30c509ef6dd4d94faf1bd100112dd01080210b50c22480a20aeb4c6383c6de9468d4d50e1b0a2f9e8080bf97bc4d7412bb154f05c34e645b21224080112205a1ba9cd51a01d6cf3286c96ceb4db0e3242077e64be63cee18d4e271390c85b2a0b0898d8caf605108797c60c3214b8bb158b93c94ed35c1970d610d1e2b34e26652c38054241ec23eaecbc57d6c5adec084655cc72a6a7d25a4b631c627546c548feca75883f5233b07dd3dca2725967f3b828b4ff06f58838f1f2f554e7657137789a636940014a240a20822ae0281a2ef8c6950970c94f9020d3df853bc800d30c509ef6dd4d94faf1bd100112dd01080210b50c22480a20aeb4c6383c6de9468d4d50e1b0a2f9e8080bf97bc4d7412bb154f05c34e645b21224080112205a1ba9cd51a01d6cf3286c96ceb4db0e3242077e64be63cee18d4e271390c85b2a0b0898d8caf60510e4bfd30a3214f84c74dea96df0ec22e11e7c33996c73fcc2d82238064241b99521391959e2875032d2590802ccb673a59c6647fa0552d2903ec322c5a43068b7b8f70f4be943ed9b760b590aed1e817209135b6086b448054a736140a88b014a240a20822ae0281a2ef8c6950970c94f9020d3df853bc800d30c509ef6dd4d94faf1bd10011a610a140375b2fc7140977c9c76d45421564e354ed422771246eb5ae987410447ed13442b485dd6990efc01d4297d798e90d3fa8467dd9c2f50ffe3238c8bf722f6c774f584b5fe91364b7b430c5a24fe57aca48665cf778030266f2c452bd918904e1a610a1442eefcda06ead475cde3731b8eb138e88cd0bac31246eb5ae98741043522a004012c9740703f676b95b5121edd7237fb0f182c3c45e7c7a77eaa67a20e6d0ac025d5bd96295bf95e2e875ab2a9da5c0e547b7d00ca7ede33c1b0389318904e1a610a145973918275c01f50555d44e92c9d9b353cadad541246eb5ae98741043c53ea6e1964e0670dc9ac72b3224207885d4c5f08cabe1e1080c662fdec278e7e833798757cb5cf121447dcd02a15f010eb4aa87cceecb23daa4bf904112e7718904e1a610a147fcd58c2d53d980b247f1612fdba93e9a76193e61246eb5ae987410479efe8c50b1f9923f48a467ecac0a64c2d6bcaa9ae67e135df84cac5aed5321f9cbb29c115f26dc84f2ef0e5fea29615848c79d690cb205cc10d688324ae8bce18904e1a610a14b702f1c9154ac9c08da247a8e30ee6f2f3373f411246eb5ae9874104b4e1d56b3429f7756452426be611e595debcb858d59f47d29ec9dd6e4b547dce1539f9b7144420bc309de496b70d6dc5f13345eee85e6b7fb332cd9f364ef12f18904e1a610a14b8bb158b93c94ed35c1970d610d1e2b34e26652c1246eb5ae9874104d6b06c725f5410e4ccbd65906ece180364ebea4902b21232c1fb5892a76be7eec22480397d6bf653e9abe7ac50435ee472b59364fe78b17acb2be2116f92a76f18904e1a610a14f84c74dea96df0ec22e11e7c33996c73fcc2d8221246eb5ae98741040600efda73e1404b0c596e08c78c5ed51631fc173e5f39d21deeddd5712fcd7d6d440c53d211eb48b03063a05b2c0c0eb084053dfcf1c6540def705c8e02845618904e")
		param := new(scom.SyncBlockHeaderParam)
		param.ChainID = heimdalChainID
		param.Address = acct.Address
		param.Headers = append(param.Headers, moreHeaderBytes)
		sink := common.NewZeroCopySink(nil)
		param.Serialization(sink)
		tx := &types.Transaction{
			SignedAddr: []common.Address{acct.Address},
		}

		native, err = NewNative(sink.Bytes(), tx, native.GetCacheDB())
		if err != nil {
			t.Fatal("NewNative fail", err)
		}
		err = handler.SyncBlockHeader(native)
		if err != nil {
			t.Fatal("SyncBlockHeader fail", err)
		}
	}
}

func TestBor(t *testing.T) {

	var (
		native *native.NativeService
		err    error
	)

	handler := NewHeimdallHandler()

	{
		// heimdall block 6404702
		heimdallGenesisHeaderBytes, _ := hex.DecodeString("0ab6020a02080a120e6865696d64616c6c2d383030303118def48603220c08dfc4be870610d39de2950130a1fb0b3a480a203e50cc32a8d3c510ea1e7cc082448361aeaa961fc561d8a0195af115844f246c1224080112209471e0efe793456b55ad612204a62d2b192ce4bc8dd759f9038a05565c7d5abc42203b8aaa34f7370d795821279107e025fce60d3ec14eec96ed5d86f69e9db7018b5220733dc62d4b4ce18f49ec9f1f460f3012f449901b24ee2f474150c8329f0cd49a5a20733dc62d4b4ce18f49ec9f1f460f3012f449901b24ee2f474150c8329f0cd49a622081ba6261d0077795e489737675de120cc9170adccaad805e12ef2708a2e214536a206ce46f48dfec60113a218079a3ff4fac17529a497e99661e0580a29e628875d2820114c26880a0af2ea0c7e8130e6ec47af756465452e812f60a0a480a20f0e1e7b2f03a62c4609b3a5749e5b614e825b8a78a068ceead78549ca67fbdcd122408011220ff574f49a5d5a3e884ebc39b6ff192514ec0f0bb17339886bb80f589465df4de12b801080210def4860322480a20f0e1e7b2f03a62c4609b3a5749e5b614e825b8a78a068ceead78549ca67fbdcd122408011220ff574f49a5d5a3e884ebc39b6ff192514ec0f0bb17339886bb80f589465df4de2a0c08e4c4be870610f2ffb38a03321492da9f8f3ee16a276896fc7b2550b2151aae033242415b9bd77492b90b67794e1e53918283b6e552f1e4b7ab08466ebe6cd25565caa344dda798e887e6b0be998afc3e451992ea333b7684e608799747c7421d0acacb0112ba01080210def4860322480a20f0e1e7b2f03a62c4609b3a5749e5b614e825b8a78a068ceead78549ca67fbdcd122408011220ff574f49a5d5a3e884ebc39b6ff192514ec0f0bb17339886bb80f589465df4de2a0c08e4c4be870610c690d8b8023214b26c22237816d898cb9992d767444105bfdc03b638014241512f780597ac11e04642e2f02aa05a0e14036774258f4901403a15cab9c30f8868a9b771d48962b33f7434a3a36a08dc194e0be008c41b22023d14b783630c020012ba01080210def4860322480a20f0e1e7b2f03a62c4609b3a5749e5b614e825b8a78a068ceead78549ca67fbdcd122408011220ff574f49a5d5a3e884ebc39b6ff192514ec0f0bb17339886bb80f589465df4de2a0c08e4c4be870610c9b5bcb8023214be188d6641e8b680743a4815dfa0f6208038960f3802424179543ac1fe902782d2b328f8f68b39eb3e5eba1ea6f963fbbfdc0cb1d6d68e38345491b3cc5ca3d325f282bc62a85f1b4b6d0c3c18532da8c96913be8a647a650012ba01080210def4860322480a20f0e1e7b2f03a62c4609b3a5749e5b614e825b8a78a068ceead78549ca67fbdcd122408011220ff574f49a5d5a3e884ebc39b6ff192514ec0f0bb17339886bb80f589465df4de2a0c08e4c4be870610b9d6abba023214c26880a0af2ea0c7e8130e6ec47af756465452e838034241502789087c81f3ed4c97f750af480017f8738e32ef9c50abb9c258ed33efa35f1e4364628756ee73766e7084b54ef71c9e29cc524e001f36e8142e51fc52cc370012ba01080210def4860322480a20f0e1e7b2f03a62c4609b3a5749e5b614e825b8a78a068ceead78549ca67fbdcd122408011220ff574f49a5d5a3e884ebc39b6ff192514ec0f0bb17339886bb80f589465df4de2a0c08e4c4be8706109ff7a29c023214c275dc8be39f50d12f66b6a63629c39da5bae5bd3804424158b98274515db2d776cb326301ce9495c0a3f92a062509ffdcd0b0cad40bff50225816f4689f9f1cb61c1e8a2947af82e49d02d9448b4d076cbceb63c3a389d5001200120012b901080210def4860322480a20f0e1e7b2f03a62c4609b3a5749e5b614e825b8a78a068ceead78549ca67fbdcd122408011220ff574f49a5d5a3e884ebc39b6ff192514ec0f0bb17339886bb80f589465df4de2a0b08e5c4be8706108ca6a0083214e4b8e9222704401ad16d4d826732953daf07c7e238074241ebf38f7e3a21d8b7fa4d0e6900801a57f4d856fcb57b569f020f04a032fda38c5dc4affc0ea866c8e97137ce04ed0c75d5149d7f3c49fb45d8ebbc11056025980012ba01080210def4860322480a20f0e1e7b2f03a62c4609b3a5749e5b614e825b8a78a068ceead78549ca67fbdcd122408011220ff574f49a5d5a3e884ebc39b6ff192514ec0f0bb17339886bb80f589465df4de2a0c08e4c4be8706108cc5e6b8023214f903ba9e006193c1527bfbe65fe2123704ea3f9938084241a55cc4686dccc455031498a90b8b0e5385562a93eee8b86c0bbaf33a30cc097d3601dd6ba75d8201a8db939d2b0e12f07e4e024cdfb67149a24949dc0467b102001a6d0a1492da9f8f3ee16a276896fc7b2550b2151aae03321246eb5ae98741041f2c0ff8f11c0584bad20b3d275a025f567deda7b8ec97600509398cceba1f3649fc8b424b4754032980770a4c495706d5191d051e6423d5b8e63cd7792aa3d51887a80220a7b6e7ffffffffffff011a6c0a14b26c22237816d898cb9992d767444105bfdc03b61246eb5ae98741047ae11341f861697b349afdae3c7328ced67fcfc82da84f8db22c78e229edcdcfd83a5bb7d69a56b352f95eadcb51b98be15d140f06c85c9cb414dfe317df4b7418812220c9fce9ffffffffffff011a660a14be188d6641e8b680743a4815dfa0f6208038960f1246eb5ae9874104888a737a003f4e522ccf23bd9980fdbe7ef2b54365249deba0f9acd45279d66355b1864173b2cf9e75a1cbfb45e65a1a72b9ea76e47aa4bd50d79772ef30176918d7c9122084a5341a6d0a14c26880a0af2ea0c7e8130e6ec47af756465452e81246eb5ae98741040bec8102c221c7cfff3e250bb6cc01c3b9a3964fb1bf4d53e91905320eef09595acb09ee0950e7374ec19488ff2523f186f6b1a9164c78dba8602e4e3c4eb01318b0ca3f20f7f4a7ffffffffffff011a660a14c275dc8be39f50d12f66b6a63629c39da5bae5bd1246eb5ae9874104f3f18a027c929380417d2bd7d2a489cb662d4977e9daff335bc51f23c1c5f5f468aa19c6c8e937a745462ef2550bce42e4f38608dffb5a06e7b9d27d964cffee18f9c43e20d092511a650a14c443279a66280fa9bb2916999c5c2d2facab05791246eb5ae98741046e58afa78fade1229ce3bebe3ed5435d895cfdc399323d4f20752935ff04dc514e8f3320a8d5434a13acc9209b9657ebbdf154ae715830135997f6c2ae02825818d83620c7f0331a6c0a14c4acf8fbe2829cb0c209dff15a98b3dc13f12b1f1246eb5ae9874104161cf579b40ea1a68f166da216c50e88f1323213cd22a8ffa6acabc45893a80250b5aafa6dea6e4a0289ebabe8b2996ae806098b7d88d2eee8634ec73fe2edfd18a00120acaed2ffffffffffff011a6d0a14e4b8e9222704401ad16d4d826732953daf07c7e21246eb5ae987410469bd14dadd683cb4a4d1e27b79d3594c2025716abaf3a8a8282b126ea5c3a686071033ef6aa4c9b7d12efb957a7a55faaa5684653895d25e88199e4c5281dffc188a9116208edbedffffffffffff011a650a14f903ba9e006193c1527bfbe65fe2123704ea3f991246eb5ae9874104dcd2883416e7b8663caafbfc885e757b0ea809657df8d6f322f01a0c5a11fd033bf13d3e0d5e88feff92ba415d32d626e3f7d9dd7b5ec7c2fef8ded83d660ac218e25f20c9a60d")
		param := new(scom.SyncGenesisHeaderParam)
		param.ChainID = heimdalChainID
		param.GenesisHeader = heimdallGenesisHeaderBytes
		sink := common.NewZeroCopySink(nil)
		param.Serialization(sink)

		tx := &types.Transaction{
			SignedAddr: []common.Address{acct.Address},
		}

		native, err = NewNative(sink.Bytes(), tx, nil)
		assert.NilError(t, err)
		err = handler.SyncGenesisHeader(native)
		if err != nil {
			t.Fatal("SyncGenesisHeader fail", err)
		}
	}

	borHandler := NewBorHandler()
	{
		// block 254
		snapBytes, _ := hex.DecodeString("7b226e756d626572223a3235342c2268617368223a22307839373233393663333564303633333839353866643663616330303437343763623164396337313166393138393930343966363665643638383035626338353039222c2276616c696461746f72536574223a7b2276616c696461746f7273223a5b7b224944223a302c227369676e6572223a22307839323865643661336539343433376262643331366363616437383437396631643136336136613863222c22706f776572223a31303030302c22616363756d223a2d31303030307d2c7b224944223a302c227369676e6572223a22307862653138386436363431653862363830373433613438313564666130663632303830333839363066222c22706f776572223a31303030302c22616363756d223a2d31303030307d2c7b224944223a302c227369676e6572223a22307863323638383061306166326561306337653831333065366563343761663735363436353435326538222c22706f776572223a31303030302c22616363756d223a2d31303030307d2c7b224944223a302c227369676e6572223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22706f776572223a31303030302c22616363756d223a2d31303030307d2c7b224944223a302c227369676e6572223a22307866393033626139653030363139336331353237626662653635666532313233373034656133663939222c22706f776572223a31303030302c22616363756d223a34303030307d5d2c2270726f706f736572223a7b224944223a302c227369676e6572223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22706f776572223a31303030302c22616363756d223a2d31303030307d7d2c22726563656e7473223a7b22313931223a22307863323638383061306166326561306337653831333065366563343761663735363436353435326538222c22313932223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22313933223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22313934223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22313935223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22313936223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22313937223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22313938223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22313939223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22323030223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22323031223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22323032223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22323033223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22323034223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22323035223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22323036223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22323037223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22323038223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22323039223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22323130223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22323131223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22323132223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22323133223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22323134223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22323135223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22323136223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22323137223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22323138223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22323139223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22323230223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22323231223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22323232223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22323233223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22323234223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22323235223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22323236223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22323237223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22323238223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22323239223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22323330223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22323331223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22323332223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22323333223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22323334223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22323335223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22323336223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22323337223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22323338223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22323339223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22323430223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22323431223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22323432223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22323433223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22323434223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22323435223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22323436223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22323437223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22323438223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22323439223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22323530223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22323531223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22323532223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22323533223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264222c22323534223a22307863323735646338626533396635306431326636366236613633363239633339646135626165356264227d7d")
		var snap Snapshot
		err := json.Unmarshal(snapBytes, &snap)
		if err != nil {
			t.Fatal("snap json.Unmarshal fail", err)
		}
		headBytes, _ := hex.DecodeString("7b22706172656e7448617368223a22307866316362393835623333653136643432633435356466653264393635373337623865643839343431333161333165383635313739353333376564396332613063222c2273686133556e636c6573223a22307831646363346465386465633735643761616238356235363762366363643431616433313234353162393438613734313366306131343266643430643439333437222c226d696e6572223a22307830303030303030303030303030303030303030303030303030303030303030303030303030303030222c227374617465526f6f74223a22307866666362383334643632373036393935653965376266313063633961396534326138326665613939386435396233613563666164383937356462666533663837222c227472616e73616374696f6e73526f6f74223a22307835366538316631373162636335356136666638333435653639326330663836653562343865303162393936636164633030313632326662356533363362343231222c227265636569707473526f6f74223a22307835366538316631373162636335356136666638333435653639326330663836653562343865303162393936636164633030313632326662356533363362343231222c226c6f6773426c6f6f6d223ac22646966666963756c7479223a22307835222c226e756d626572223a2230786665222c226761734c696d6974223a223078633338336162222c2267617355736564223a22307830222c2274696d657374616d70223a2230783565643961326337222c22657874726144617461223a2230786435383330313039303038333632366637323836363736663331326533313333383536633639366537353738303030303030303030303030303030303030303035636134646166333464613336623363386337396139666637316466393236353566626132653437303638636564646531623937353434353036376134663633323730386432623939303132383965303235383636636639643730303363393330613337626233373637613366653237616334326164376333666431633532633031222c226d697848617368223a22307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030222c226e6f6e6365223a22307830303030303030303030303030303030222c2262617365466565506572476173223a6e756c6c2c2268617368223a22307839373233393663333564303633333839353866643663616330303437343763623164396337313166393138393930343966363665643638383035626338353039227d")
		var header ethTypes.Header
		err = json.Unmarshal(headBytes, &header)
		if err != nil {
			t.Fatal("header json.Unmarshal fail", err)
		}
		genesis := HeaderWithOptionalSnap{
			Header:   header,
			Snapshot: &snap,
		}

		borGenesisHeaderBytes, _ := json.Marshal(genesis)
		param := new(scom.SyncGenesisHeaderParam)
		param.ChainID = borChainID
		param.GenesisHeader = borGenesisHeaderBytes
		sink := common.NewZeroCopySink(nil)
		param.Serialization(sink)

		tx := &types.Transaction{
			SignedAddr: []common.Address{acct.Address},
		}

		native, err = NewNative(sink.Bytes(), tx, native.GetCacheDB())
		assert.NilError(t, err)
		err = borHandler.SyncGenesisHeader(native)
		if err != nil {
			t.Fatal("SyncGenesisHeader fail", err)
		}
	}

	{
		// block 255
		headBytes, _ := hex.DecodeString("7b22706172656e7448617368223a22307839373233393663333564303633333839353866643663616330303437343763623164396337313166393138393930343966363665643638383035626338353039222c2273686133556e636c6573223a22307831646363346465386465633735643761616238356235363762366363643431616433313234353162393438613734313366306131343266643430643439333437222c226d696e6572223a22307830303030303030303030303030303030303030303030303030303030303030303030303030303030222c227374617465526f6f74223a22307866666362383334643632373036393935653965376266313063633961396534326138326665613939386435396233613563666164383937356462666533663837222c227472616e73616374696f6e73526f6f74223a22307835366538316631373162636335356136666638333435653639326330663836653562343865303162393936636164633030313632326662356533363362343231222c227265636569707473526f6f74223a22307835366538316631373162636335356136666638333435653639326330663836653562343865303162393936636164633030313632326662356533363362343231222c226c6f6773426c6f6f6d223a2230783030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030222c22646966666963756c7479223a22307835222c226e756d626572223a2230786666222c226761734c696d6974223a223078633362343861222c2267617355736564223a22307830222c2274696d657374616d70223a2230783565643961326339222c22657874726144617461223ac226d697848617368223a22307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030222c226e6f6e6365223a22307830303030303030303030303030303030222c2262617365466565506572476173223a6e756c6c2c2268617368223a22307864323664333338326265326564393261386232333564376533356233313266643838613036383135393563653636666131623931323761336330396465373933227d")
		var header ethTypes.Header
		err = json.Unmarshal(headBytes, &header)
		if err != nil {
			t.Fatal("header json.Unmarshal fail", err)
		}
		// heimdall block 6404703
		proofHeaderBytes, _ := hex.DecodeString("0ab6020a02080a120e6865696d64616c6c2d383030303118dff48603220c08e4c4be870610b9d6abba0230a1fb0b3a480a20f0e1e7b2f03a62c4609b3a5749e5b614e825b8a78a068ceead78549ca67fbdcd122408011220ff574f49a5d5a3e884ebc39b6ff192514ec0f0bb17339886bb80f589465df4de4220df3b887c750c01e938a3c08d6e9f241cd701f544304a2bdd78965c6665545c415220733dc62d4b4ce18f49ec9f1f460f3012f449901b24ee2f474150c8329f0cd49a5a20733dc62d4b4ce18f49ec9f1f460f3012f449901b24ee2f474150c8329f0cd49a622081ba6261d0077795e489737675de120cc9170adccaad805e12ef2708a2e214536a206ce46f48dfec60113a218079a3ff4fac17529a497e99661e0580a29e628875d2820114c275dc8be39f50d12f66b6a63629c39da5bae5bd12f20a0a480a20dbc841abcdc3bf033263446b9f6911c1915f67099efbc119ddf8624e8a90050e122408011220c30d0451a851deb09ab267717ac09413068f3973e3641adb9129f019100610cd12b801080210dff4860322480a20dbc841abcdc3bf033263446b9f6911c1915f67099efbc119ddf8624e8a90050e122408011220c30d0451a851deb09ab267717ac09413068f3973e3641adb9129f019100610cd2a0c08eac4be870610e591a2de01321492da9f8f3ee16a276896fc7b2550b2151aae033242419375aab1f6951e371ec106cbe37df571a7f9d34e9c99873984198b3493e38c31688d60da23b0c01a558a6acac13e59bb781d487a66652b122ed364f41928a8340112b901080210dff4860322480a20dbc841abcdc3bf033263446b9f6911c1915f67099efbc119ddf8624e8a90050e122408011220c30d0451a851deb09ab267717ac09413068f3973e3641adb9129f019100610cd2a0b08eac4be870610b8f7e9713214b26c22237816d898cb9992d767444105bfdc03b6380142418dc93be8a80f68f3b4ac7e72eba7803b7f872e91d676decff294368e18ebb1552fbe1b92fa5e84405fe534d79534c7f12bafc7f87b8c570a08c67c47141254600112b901080210dff4860322480a20dbc841abcdc3bf033263446b9f6911c1915f67099efbc119ddf8624e8a90050e122408011220c30d0451a851deb09ab267717ac09413068f3973e3641adb9129f019100610cd2a0b08eac4be870610daa196723214be188d6641e8b680743a4815dfa0f6208038960f380242410add4e51e049be5540dd5f47c6d5396353341a7d18e4ba6722b43c458fd2f109696f133aa1037190ad8740a4f4bf3f976ec1b1e17493aa0a6318ad64f1c7ea2d0112b901080210dff4860322480a20dbc841abcdc3bf033263446b9f6911c1915f67099efbc119ddf8624e8a90050e122408011220c30d0451a851deb09ab267717ac09413068f3973e3641adb9129f019100610cd2a0b08eac4be87061088b7a34d3214c26880a0af2ea0c7e8130e6ec47af756465452e8380342419479250c91ca229f7fb02441511922163251460b00eeef5a6805bc2854fb3958400395865f8476e54da227abe4442d16a071b8a1f122bffecc69a0ff1a7a71b20112b901080210dff4860322480a20dbc841abcdc3bf033263446b9f6911c1915f67099efbc119ddf8624e8a90050e122408011220c30d0451a851deb09ab267717ac09413068f3973e3641adb9129f019100610cd2a0b08eac4be870610ffd4fd713214c275dc8be39f50d12f66b6a63629c39da5bae5bd38044241151a235689f14312b1a15f73f97a5dd40ef1ca8271288fcfe3518926c84b438d759516113a92daab2a39ecc48569069453e82ba5e609513313d19d441a113c08011200120012ba01080210dff4860322480a20dbc841abcdc3bf033263446b9f6911c1915f67099efbc119ddf8624e8a90050e122408011220c30d0451a851deb09ab267717ac09413068f3973e3641adb9129f019100610cd2a0c08eac4be870610c992af98023214e4b8e9222704401ad16d4d826732953daf07c7e238074241cbaca7edd430f904a7d95c01c3d3116569c696d0b1d9f476b92055960dec0e00568cb9fff470a6890151dc96dd386c19c42428a68d630fe20759f4a122045d7c0012b901080210dff4860322480a20dbc841abcdc3bf033263446b9f6911c1915f67099efbc119ddf8624e8a90050e122408011220c30d0451a851deb09ab267717ac09413068f3973e3641adb9129f019100610cd2a0b08eac4be870610a885b9723214f903ba9e006193c1527bfbe65fe2123704ea3f993808424185552463bb7f8170ba9e25e196132c34dd665ed5e75c0a21cdcdc7287247767a34c6934ef07fd535f6ee76da9d99ae366d9c8cdf4ec4d4cd98755750ada71d8e001a6d0a1492da9f8f3ee16a276896fc7b2550b2151aae03321246eb5ae98741041f2c0ff8f11c0584bad20b3d275a025f567deda7b8ec97600509398cceba1f3649fc8b424b4754032980770a4c495706d5191d051e6423d5b8e63cd7792aa3d51887a80220aedee9ffffffffffff011a6c0a14b26c22237816d898cb9992d767444105bfdc03b61246eb5ae98741047ae11341f861697b349afdae3c7328ced67fcfc82da84f8db22c78e229edcdcfd83a5bb7d69a56b352f95eadcb51b98be15d140f06c85c9cb414dfe317df4b7418812220ca9eeaffffffffffff011a660a14be188d6641e8b680743a4815dfa0f6208038960f1246eb5ae9874104888a737a003f4e522ccf23bd9980fdbe7ef2b54365249deba0f9acd45279d66355b1864173b2cf9e75a1cbfb45e65a1a72b9ea76e47aa4bd50d79772ef30176918d7c91220dbee461a6d0a14c26880a0af2ea0c7e8130e6ec47af756465452e81246eb5ae98741040bec8102c221c7cfff3e250bb6cc01c3b9a3964fb1bf4d53e91905320eef09595acb09ee0950e7374ec19488ff2523f186f6b1a9164c78dba8602e4e3c4eb01318b0ca3f20a7bfe7ffffffffffff011a6d0a14c275dc8be39f50d12f66b6a63629c39da5bae5bd1246eb5ae9874104f3f18a027c929380417d2bd7d2a489cb662d4977e9daff335bc51f23c1c5f5f468aa19c6c8e937a745462ef2550bce42e4f38608dffb5a06e7b9d27d964cffee18f9c43e20dd8be5ffffffffffff011a650a14c443279a66280fa9bb2916999c5c2d2facab05791246eb5ae98741046e58afa78fade1229ce3bebe3ed5435d895cfdc399323d4f20752935ff04dc514e8f3320a8d5434a13acc9209b9657ebbdf154ae715830135997f6c2ae02825818d836209fa7341a6c0a14c4acf8fbe2829cb0c209dff15a98b3dc13f12b1f1246eb5ae9874104161cf579b40ea1a68f166da216c50e88f1323213cd22a8ffa6acabc45893a80250b5aafa6dea6e4a0289ebabe8b2996ae806098b7d88d2eee8634ec73fe2edfd18a00120ccafd2ffffffffffff011a660a14e4b8e9222704401ad16d4d826732953daf07c7e21246eb5ae987410469bd14dadd683cb4a4d1e27b79d3594c2025716abaf3a8a8282b126ea5c3a686071033ef6aa4c9b7d12efb957a7a55faaa5684653895d25e88199e4c5281dffc188a91162098ec031a650a14f903ba9e006193c1527bfbe65fe2123704ea3f991246eb5ae9874104dcd2883416e7b8663caafbfc885e757b0ea809657df8d6f322f01a0c5a11fd033bf13d3e0d5e88feff92ba415d32d626e3f7d9dd7b5ec7c2fef8ded83d660ac218e25f20ab860e")
		cdc := polygonTypes.NewCDC()
		var proofHeader CosmosHeader
		err = cdc.UnmarshalBinaryBare(proofHeaderBytes, &proofHeader)
		if err != nil {
			t.Fatal("CosmosHeader UnmarshalBinaryBare fail", err)
		}
		merkleProofBytes, _ := hex.DecodeString("7b226f7073223a5b7b2274797065223a226961766c3a76222c226b6579223a224e6a453d222c2264617461223a226e77514b6e41514b4c41676145494555474f507568674d71494350633037436e5678556458455a506b5a4856504863454a4b47476b5873562f2b715a744d4b514f566151436977494742435a44686a6a376f59444b6943462b3243327a7342774254474c686c31615069335059773871426a4f346e78434e6f374c6a76704b4c2f416f734342595138415959342b364741796f677272667657615444616b3958633962536450477379686753594257752f566c736b4562387145365746506f4b4c416755454d4144474f507568674d7149443531536e6f3968384e794d356e50327a69316c716239575631586175586b5a644e6f473545422b6d536a4369734945424279474f507568674d714942646352714573464759304743704a3168493166695659467345715a423755345335554d4e4b2f6d3035334369734944684138474f507568674d714950563377593270724b717444694b6a6f5262373837746346595a50794c37614e547870365a4a54544c5063436973494442416b474f507568674d7149464a6f74624f70714d564843363965435241666f4e4c65777262614c6263726c547334796b6d6c367568634369734943684150474f507568674d71494e52587770777675664c52736752514268444f724652374f794f347679393050706a6e6459584d326344314369734942684147474f507568674d7149447731483941536a554b435a354b4333355043774b4d70616d4d5a7850514646435a4c395343696d4a4a4f4369734942424145474f507568674d69494f6173576c502b5335666b69774f344242626558417a6652616364764432614933796430735833634b725543696f494168414347502f7644696f6735424e73696f7a4e4a79427155346842594d4442485955414875594b6837476862324c68786b446b533873614b416f434e6a4553494c632f4179646e626e57423871787a32747854376a4f74776f4b73762f4d6f6742366e336176666a736d414741343d227d2c7b2274797065223a226d756c746973746f7265222c226b6579223a22596d3979222c2264617461223a226877554b6841554b46776f4d5932686861573574595735685a3256794567634b42516a6639495944436a494b425852766348567745696b4b4a776a66394959444569415948334c6c583946676d39384933596b4a70514f4b45734a744d624b74756f3055446156565463766969516f7743674e69623349534b516f6e434e2f3068674d53494239516a68656c336e7571756d445659617a32394b687a65366d4e616f63622b527762424a77357433414b436a4d4b426e4e31634842736552497043696349332f534741784967612b435a736234644a6945712f615537676338644b4a55654c66596c3957342f412f5779616e7a714a41774b4d516f45595856306142497043696349332f534741784967614d31334452776d39444f316338743779735778576e4b2f6f73784e4a5041435a713772644634644871304b4e516f496332786863326870626d63534b516f6e434e2f3068674d53494d6f4259325646514376634765325850545a37525331544a506872454d3638373875655a4b2f5578533132436a494b42574e735a584a7245696b4b4a776a66394959444569415930394a363238785a677247494d464f6e72635342627a4e5672624148396a4e464c7a464d616a7a6146516f7a43675a7759584a6862584d534b516f6e434e2f3068674d5349426f52556c6f7a544f6b5253424c5956614361304c6772466c377266786a644e3249707735783631616565436a414b413264766468497043696349332f5347417849673052717755515139584867762b79735351596247505772703075376774346354726a6378513266687165414b4e416f486333526861326c755a78497043696349332f53474178496773694e3158516f32694852586b4d6a452b39364a5635447a794d7249496c7236514c646678585366744a4d4b46676f4c63326c6b5a574e6f595735755a57775342776f46434e2f3068674d4b4d516f45625746706268497043696349332f53474178496778766b6147592b6974354c514630396d614b744734644437327758744d684175504f715552736a6a3847734b44776f45596d46756178494843675549332f534741776f334367706a6147566a613342766157353045696b4b4a776a663949594445694336367951446443686d774c43724b312b495a496a472b6d7957736f6d2b597a347a685069516f59583779513d3d227d5d7d")
		cpvBytes, _ := hex.DecodeString("7b224b70223a222f783a3632366637322f783a33363331222c2256616c7565223a2243414551674149592f7a4d693767514b617767464941456f6b453479515153695a366e426e53764957386a58515a364754743758345a4e5948396d4a46644238726f623969674f75746d3759657749414f6e69585a55566930705a334968674931336b4c4d41357046697259624274374a4d30484f6853536a74616a3655513375394d577a4b313452353864466a70716a464441782f332f2f2f2f2f2f2f3842436d4d49416941424b4a424f4d6b45456949707a6567412f546c49737a794f396d594439766e377974554e6c4a4a33726f506d7331464a35316d4e5673595a4263374c506e6e5768792f7446356c6f6163726e7164755236704c315131356479377a415861546f557668694e5a6b486f746f42304f6b675633364432494941346c6739516b45344b597767424941456f6b4534795151514c37494543776948487a2f382b4a5175327a41484475614f575437472f54565070475155794475384a5756724c4365344a554f6333547347556950386c492f474739724770466b7834323668674c6b3438547241544f6854436149436772793667782b6754446d374565766457526c5253364643515467706a43414d6741536951546a4a424250507869674a386b704f415158307231394b6b6963746d4c556c333664722f4d3176464879504278665830614b6f5a78736a704e366446526937795651764f5175547a68676a662b316f4735376e53665a5a4d2f2b3436464d4a313349766a6e3144524c326132706a59707735326c75755739554a424f436d4d49424341424b4a424f4d6b4545334e4b494e42626e7547593871767638694635316577366f435756392b4e627a4976416144466f522f514d373854302b445636492f762b53756b46644d74596d342f665a3358746578384c2b2b4e37595057594b776a6f552b514f366e6742686b384653652f766d582b49534e77547150356c516b453453617767464941456f6b453479515153695a366e426e53764957386a58515a364754743758345a4e5948396d4a46644238726f623969674f75746d3759657749414f6e69585a55566930705a334968674931336b4c4d41357046697259624274374a4d30484f6853536a74616a3655513375394d577a4b313452353864466a70716a464441782f332f2f2f2f2f2f2f38424b6d7349425341424b4a424f4d6b45456f6d6570775a30727946764931304765686b3765312b475457422f5a69525851664b36472f596f4472725a7532487343414470346c32564659744b5764794959434e6435437a414f61525971324777626579544e427a6f556b6f37576f2b6c454e377654467379746545656648525936616f7851774d66392f2f2f2f2f2f2f2f4153706a4341496741536951546a4a424249694b63336f41503035534c4d386a765a6d412f62352b387256445a53536436364435724e525365645a6a5662474751584f797a3535316f63763752655a61476e4b35366e626b65715339554e65586375387746326b36464c34596a575a42364c61416444704946642b67396943414f4a5950554a424f4b6d4d49415341424b4a424f4d6b4545432b79424173496878382f2f5069554c7473774277376d6a6c6b2b787630315436526b464d67377643566c6179776e754356446e4e3037426c496a2f4a5350786876617871525a4d654e756f5943354f50453677457a6f55776d69416f4b38756f4d666f4577357578487233566b5a55557568516b453471597767444941456f6b4534795151547a38596f43664a4b54674546394b39665370496e4c5a69314a642b6e612f7a4e627852386a7763583139476971476362493654656e52555975386c554c7a6b4c6b38345949332f746142756535306e325754502f754f6854436464794c343539513053396d747159324b634f647062726c765643515469706a4341516741536951546a4a42424e7a53694451573537686d504b72372f4968656458734f71416c6c66666a5738794c7747677861456630444f2f4539506731656950372f6b72704258544c574a75503332643137587366432f766a653244316d4373493646506b4475703441595a5042556e7637356c2f69456a6345366a2b5a554a424f4d6755344d4441774d513d3d227d")

		proof := CosmosProof{
			Header: proofHeader,
		}
		err = json.Unmarshal(merkleProofBytes, &proof.Proof)
		if err != nil {
			t.Fatal("merkleProofBytes json.Unmarshal fail", err)
		}
		err = json.Unmarshal(cpvBytes, &proof.Value)
		if err != nil {
			t.Fatal("cpvBytes json.Unmarshal fail", err)
		}

		proofBytes, err := cdc.MarshalBinaryBare(proof)
		if err != nil {
			t.Fatal("CosmosProof MarshalBinaryBare fail", err)
		}

		headerWOP := HeaderWithOptionalProof{Header: header, Proof: proofBytes}
		n1Bytes, _ := json.Marshal(headerWOP)
		param := new(scom.SyncBlockHeaderParam)
		param.ChainID = borChainID
		param.Address = acct.Address
		param.Headers = append(param.Headers, n1Bytes)
		sink := common.NewZeroCopySink(nil)
		param.Serialization(sink)
		tx := &types.Transaction{
			SignedAddr: []common.Address{acct.Address},
		}

		native, err = NewNative(sink.Bytes(), tx, native.GetCacheDB())
		if err != nil {
			t.Fatal("NewNative fail", err)
		}
		err = borHandler.SyncBlockHeader(native)
		if err != nil {
			t.Fatal("SyncBlockHeader fail", err)
		}
	}
}
