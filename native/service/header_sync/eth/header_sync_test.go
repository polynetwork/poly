/*
 * Copyright (C) 2020 The poly network Authors
 * This file is part of The poly network library.
 *
 * The  poly network  is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * The  poly network  is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 * You should have received a copy of the GNU Lesser General Public License
 * along with The poly network .  If not, see <http://www.gnu.org/licenses/>.
 */
package eth

import (
	"bytes"
	"encoding/binary"
	"encoding/hex"
	"encoding/json"
	"github.com/ontio/ontology-crypto/keypair"
	"github.com/polynetwork/poly/account"
	"github.com/polynetwork/poly/common"
	"github.com/polynetwork/poly/core/genesis"
	cstates "github.com/polynetwork/poly/core/states"
	"github.com/polynetwork/poly/core/store/leveldbstore"
	"github.com/polynetwork/poly/core/store/overlaydb"
	"github.com/polynetwork/poly/core/types"
	"github.com/polynetwork/poly/native"
	scom "github.com/polynetwork/poly/native/service/header_sync/common"
	"github.com/polynetwork/poly/native/service/utils"
	"github.com/polynetwork/poly/native/storage"
	"github.com/stretchr/testify/assert"
	"strings"
	"testing"

	ethcommon "github.com/ethereum/go-ethereum/common"
)

var (
	acct     *account.Account = account.NewAccount("")
	setBKers                  = func() {
		genesis.GenesisBookkeepers = []keypair.PublicKey{acct.PublicKey}
	}
)

const (
	SUCCESS = iota
	GENESIS_PARAM_ERROR
	GENESIS_INITIALIZED
	SYNCBLOCK_PARAM_ERROR
	SYNCBLOCK_ORPHAN
	DIFFICULTY_ERROR
	NONCE_ERROR
	OPERATOR_ERROR
	UNKNOWN
)

func init() {
	setBKers()
}

func typeOfError(e error) int {
	if e == nil {
		return SUCCESS
	}
	errDesc := e.Error()
	if strings.Contains(errDesc, "ETHHandler GetHeaderByHeight, genesis header had been initialized") {
		return GENESIS_INITIALIZED
	} else if strings.Contains(errDesc, "ETHHandler SyncGenesisHeader: getGenesisHeader, deserialize header err:") {
		return GENESIS_PARAM_ERROR
	} else if strings.Contains(errDesc, "SyncBlockHeader, deserialize header err:") {
		return SYNCBLOCK_PARAM_ERROR
	} else if strings.Contains(errDesc, "SyncBlockHeader, get the parent block failed. Error:") {
		return SYNCBLOCK_ORPHAN
	} else if strings.Contains(errDesc, "SyncBlockHeader, invalid difficulty:") {
		return DIFFICULTY_ERROR
	} else if strings.Contains(errDesc, "SyncBlockHeader, verify header error:") {
		return NONCE_ERROR
	} else if strings.Contains(errDesc, "SyncGenesisHeader, checkWitness error:") {
		return OPERATOR_ERROR
	}
	return UNKNOWN
}

func NewNative(args []byte, tx *types.Transaction, db *storage.CacheDB) *native.NativeService {
	if db == nil {
		store, _ := leveldbstore.NewMemLevelDBStore()
		db = storage.NewCacheDB(overlaydb.NewOverlayDB(store))
	}
	ns, _ := native.NewNativeService(db, tx, 0, 0, common.Uint256{0}, 0, args, false)
	return ns
}

func getLatestHeight(native *native.NativeService) uint64 {
	contractAddress := utils.HeaderSyncContractAddress
	key := append([]byte(scom.CURRENT_HEADER_HEIGHT), utils.GetUint64Bytes(2)...)
	// try to get storage
	result, err := native.GetCacheDB().Get(utils.ConcatKey(contractAddress, key))
	if err != nil {
		return 0
	}
	if result == nil || len(result) == 0 {
		return 0
	} else {
		heightBytes, _ := cstates.GetValueFromRawStorageItem(result)
		return binary.LittleEndian.Uint64(heightBytes)
	}
}

func getHeaderHashByHeight(native *native.NativeService, height uint64) ethcommon.Hash {
	headerStore, _ := native.GetCacheDB().Get(utils.ConcatKey(utils.HeaderSyncContractAddress,
		[]byte(scom.MAIN_CHAIN), utils.GetUint64Bytes(2), utils.GetUint64Bytes(height)))
	hashBytes, _ := cstates.GetValueFromRawStorageItem(headerStore)
	return ethcommon.BytesToHash(hashBytes)
}

func getHeaderByHash(native *native.NativeService, hash ethcommon.Hash) []byte {
	headerStore, _ := native.GetCacheDB().Get(utils.ConcatKey(utils.HeaderSyncContractAddress,
		[]byte(scom.HEADER_INDEX), utils.GetUint64Bytes(2), hash.Bytes()))
	headerBytes, err := cstates.GetValueFromRawStorageItem(headerStore)
	if err != nil {
		return nil
	}
	var headerWithDifficultySum HeaderWithDifficultySum
	if err := json.Unmarshal(headerBytes, &headerWithDifficultySum); err != nil {
		return nil
	}
	headerOnly, _ := json.Marshal(headerWithDifficultySum.Header)
	return headerOnly
}

func TestSyncGenesisHeader(t *testing.T) {
	header7152785, _ := hex.DecodeString("7b22706172656e7448617368223a22307837633137326261396464383763363163616531643162613031626239356366353830366465313835653966613030313065343137656666353135356335366537222c2273686133556e636c6573223a22307831646363346465386465633735643761616238356235363762366363643431616433313234353162393438613734313366306131343266643430643439333437222c226d696e6572223a22307836333562343736346431393339646661636433613830313437323631353961626332373762656363222c227374617465526f6f74223a22307838366233376564663162343537663566393664333162303963343865306133653863333738616138666531386331623431343331363331623037643430343931222c227472616e73616374696f6e73526f6f74223a22307835626663393365366461343263383138343134393766366538303762373731366161613064313432396132313130653661323737373566336631373538343536222c227265636569707473526f6f74223a22307839303533306462303165613761636466306430613334323536343934343463333633303365383231363464616334303532303464653839633837356532636464222c226c6f6773426c6f6f6d223ac22646966666963756c7479223a2230783130326535363063222c226e756d626572223a223078366432343931222c226761734c696d6974223a223078376131323164222c2267617355736564223a223078363330633536222c2274696d657374616d70223a2230783565323431626434222c22657874726144617461223a2230786465383330323035306438663530363137323639373437393264343537343638363537323635373536643836333132653333333832653330383236633639222c226d697848617368223a22307837386637386462346565353132336139386530363361663339646663663965633464333863373739383434376462323235386665383232363437613133643465222c226e6f6e6365223a22307832376132383132336631393365663439222c2268617368223a22307839306131626339633566326532396365316636303562323366336661366262303634666462653535336138313632626664666133623962623864303630306537227d")
	param := new(scom.SyncGenesisHeaderParam)
	param.ChainID = 2
	param.GenesisHeader = header7152785
	sink := common.NewZeroCopySink(nil)
	param.Serialization(sink)

	tx := &types.Transaction{
		SignedAddr: []common.Address{acct.Address},
	}

	native := NewNative(sink.Bytes(), tx, nil)
	ethHandler := NewETHHandler()
	err := ethHandler.SyncGenesisHeader(native)

	assert.Equal(t, SUCCESS, typeOfError(err))
	height := getLatestHeight(native)
	assert.Equal(t, uint64(7152785), height)
	header7152785Hash := getHeaderHashByHeight(native, 7152785)
	assert.Equal(t, true, bytes.Equal(ethcommon.HexToHash("90a1bc9c5f2e29ce1f605b23f3fa6bb064fdbe553a8162bfdfa3b9bb8d0600e7").Bytes(), header7152785Hash.Bytes()))
	header7152785_formstore := getHeaderByHash(native, header7152785Hash)
	assert.Equal(t, true, bytes.Equal(header7152785_formstore, header7152785))
}

func TestSyncGenesisHeaderNoOperator(t *testing.T) {
	header7152785, _ := hex.DecodeString("7b22706172656e7448617368223a22307837633137326261396464383763363163616531643162613031626239356366353830366465313835653966613030313065343137656666353135356335366537222c2273686133556e636c6573223a22307831646363346465386465633735643761616238356235363762366363643431616433313234353162393438613734313366306131343266643430643439333437222c226d696e6572223a22307836333562343736346431393339646661636433613830313437323631353961626332373762656363222c227374617465526f6f74223a22307838366233376564663162343537663566393664333162303963343865306133653863333738616138666531386331623431343331363331623037643430343931222c227472616e73616374696f6e73526f6f74223a22307835626663393365366461343263383138343134393766366538303762373731366161613064313432396132313130653661323737373566336631373538343536222c227265636569707473526f6f74223a22307839303533306462303165613761636466306430613334323536343934343463333633303365383231363464616334303532303464653839633837356532636464222c226c6f6773426c6f6f6d223ac22646966666963756c7479223a2230783130326535363063222c226e756d626572223a223078366432343931222c226761734c696d6974223a223078376131323164222c2267617355736564223a223078363330633536222c2274696d657374616d70223a2230783565323431626434222c22657874726144617461223a2230786465383330323035306438663530363137323639373437393264343537343638363537323635373536643836333132653333333832653330383236633639222c226d697848617368223a22307837386637386462346565353132336139386530363361663339646663663965633464333863373739383434376462323235386665383232363437613133643465222c226e6f6e6365223a22307832376132383132336631393365663439222c2268617368223a22307839306131626339633566326532396365316636303562323366336661366262303634666462653535336138313632626664666133623962623864303630306537227d")
	param := new(scom.SyncGenesisHeaderParam)
	param.ChainID = 2
	param.GenesisHeader = header7152785
	sink := common.NewZeroCopySink(nil)
	param.Serialization(sink)

	tx := &types.Transaction{}

	native := NewNative(sink.Bytes(), tx, nil)
	ethHandler := NewETHHandler()
	err := ethHandler.SyncGenesisHeader(native)
	assert.Equal(t, OPERATOR_ERROR, typeOfError(err))
	height := getLatestHeight(native)
	assert.Equal(t, uint64(0), height)
}

func TestSyncGenesisHeaderTwice(t *testing.T) {
	ethHandler := NewETHHandler()
	var native *native.NativeService
	{
		header7152785, _ := hex.DecodeString("7b22706172656e7448617368223a22307837633137326261396464383763363163616531643162613031626239356366353830366465313835653966613030313065343137656666353135356335366537222c2273686133556e636c6573223a22307831646363346465386465633735643761616238356235363762366363643431616433313234353162393438613734313366306131343266643430643439333437222c226d696e6572223a22307836333562343736346431393339646661636433613830313437323631353961626332373762656363222c227374617465526f6f74223a22307838366233376564663162343537663566393664333162303963343865306133653863333738616138666531386331623431343331363331623037643430343931222c227472616e73616374696f6e73526f6f74223a22307835626663393365366461343263383138343134393766366538303762373731366161613064313432396132313130653661323737373566336631373538343536222c227265636569707473526f6f74223a22307839303533306462303165613761636466306430613334323536343934343463333633303365383231363464616334303532303464653839633837356532636464222c226c6f6773426c6f6f6d223ac22646966666963756c7479223a2230783130326535363063222c226e756d626572223a223078366432343931222c226761734c696d6974223a223078376131323164222c2267617355736564223a223078363330633536222c2274696d657374616d70223a2230783565323431626434222c22657874726144617461223a2230786465383330323035306438663530363137323639373437393264343537343638363537323635373536643836333132653333333832653330383236633639222c226d697848617368223a22307837386637386462346565353132336139386530363361663339646663663965633464333863373739383434376462323235386665383232363437613133643465222c226e6f6e6365223a22307832376132383132336631393365663439222c2268617368223a22307839306131626339633566326532396365316636303562323366336661366262303634666462653535336138313632626664666133623962623864303630306537227d")
		param := new(scom.SyncGenesisHeaderParam)
		param.ChainID = 2
		param.GenesisHeader = header7152785
		sink := common.NewZeroCopySink(nil)
		param.Serialization(sink)
		tx := &types.Transaction{
			SignedAddr: []common.Address{acct.Address},
		}

		native = NewNative(sink.Bytes(), tx, nil)
		err := ethHandler.SyncGenesisHeader(native)
		assert.Equal(t, SUCCESS, typeOfError(err))
		height := getLatestHeight(native)
		assert.Equal(t, uint64(7152785), height)
		header7152785Hash := getHeaderHashByHeight(native, 7152785)
		assert.Equal(t, true, bytes.Equal(ethcommon.HexToHash("90a1bc9c5f2e29ce1f605b23f3fa6bb064fdbe553a8162bfdfa3b9bb8d0600e7").Bytes(), header7152785Hash.Bytes()))
		header7152785_formstore := getHeaderByHash(native, header7152785Hash)
		assert.Equal(t, true, bytes.Equal(header7152785_formstore, header7152785))
	}
	{
		header7152785, _ := hex.DecodeString("7b22706172656e7448617368223a22307837633137326261396464383763363163616531643162613031626239356366353830366465313835653966613030313065343137656666353135356335366537222c2273686133556e636c6573223a22307831646363346465386465633735643761616238356235363762366363643431616433313234353162393438613734313366306131343266643430643439333437222c226d696e6572223a22307836333562343736346431393339646661636433613830313437323631353961626332373762656363222c227374617465526f6f74223a22307838366233376564663162343537663566393664333162303963343865306133653863333738616138666531386331623431343331363331623037643430343931222c227472616e73616374696f6e73526f6f74223a22307835626663393365366461343263383138343134393766366538303762373731366161613064313432396132313130653661323737373566336631373538343536222c227265636569707473526f6f74223a22307839303533306462303165613761636466306430613334323536343934343463333633303365383231363464616334303532303464653839633837356532636464222c226c6f6773426c6f6f6d223ac22646966666963756c7479223a2230783130326535363063222c226e756d626572223a223078366432343931222c226761734c696d6974223a223078376131323164222c2267617355736564223a223078363330633536222c2274696d657374616d70223a2230783565323431626434222c22657874726144617461223a2230786465383330323035306438663530363137323639373437393264343537343638363537323635373536643836333132653333333832653330383236633639222c226d697848617368223a22307837386637386462346565353132336139386530363361663339646663663965633464333863373739383434376462323235386665383232363437613133643465222c226e6f6e6365223a22307832376132383132336631393365663439222c2268617368223a22307839306131626339633566326532396365316636303562323366336661366262303634666462653535336138313632626664666133623962623864303630306537227d")
		param := new(scom.SyncGenesisHeaderParam)
		param.ChainID = 2
		param.GenesisHeader = header7152785
		sink := common.NewZeroCopySink(nil)
		param.Serialization(sink)
		tx := &types.Transaction{
			SignedAddr: []common.Address{acct.Address},
		}

		native = NewNative(sink.Bytes(), tx, native.GetCacheDB())
		err := ethHandler.SyncGenesisHeader(native)
		assert.Equal(t, GENESIS_INITIALIZED, typeOfError(err))
		height := getLatestHeight(native)
		assert.Equal(t, uint64(7152785), height)
		header7152785Hash := getHeaderHashByHeight(native, 7152785)
		assert.Equal(t, true, bytes.Equal(ethcommon.HexToHash("90a1bc9c5f2e29ce1f605b23f3fa6bb064fdbe553a8162bfdfa3b9bb8d0600e7").Bytes(), header7152785Hash.Bytes()))
		header7152785_formstore := getHeaderByHash(native, header7152785Hash)
		assert.Equal(t, true, bytes.Equal(header7152785_formstore, header7152785))
	}
}

func TestSyncGenesisHeader_ParamError(t *testing.T) {
	header7152785, _ := hex.DecodeString("7b22706172656e7448617368223a223078376331373262613964643763363163616531643162613031626239356366353830366465313835653966613030313065343137656666353135356335366537222c2273686133556e636c6573223a22307831646363346465386465633735643761616238356235363762366363643431616433313234353162393438613734313366306131343266643430643439333437222c226d696e6572223a22307836333562343736346431393339646661636433613830313437323631353961626332373762656363222c227374617465526f6f74223a22307838366233376564663162343537663566393664333162303963343865306133653863333738616138666531386331623431343331363331623037643430343931222c227472616e73616374696f6e73526f6f74223a22307835626663393365366461343263383138343134393766366538303762373731366161613064313432396132313130653661323737373566336631373538343536222c227265636569707473526f6f74223a22307839303533306462303165613761636466306430613334323536343934343463333633303365383231363464616334303532303464653839633837356532636464222c226c6f6773426c6f6f6d223ac22646966666963756c7479223a2230783130326535363063222c226e756d626572223a223078366432343931222c226761734c696d6974223a223078376131323164222c2267617355736564223a223078363330633536222c2274696d657374616d70223a2230783565323431626434222c22657874726144617461223a2230786465383330323035306438663530363137323639373437393264343537343638363537323635373536643836333132653333333832653330383236633639222c226d697848617368223a22307837386637386462346565353132336139386530363361663339646663663965633464333863373739383434376462323235386665383232363437613133643465222c226e6f6e6365223a22307832376132383132336631393365663439222c2268617368223a22307839306131626339633566326532396365316636303562323366336661366262303634666462653535336138313632626664666133623962623864303630306537227d")
	param := new(scom.SyncGenesisHeaderParam)
	param.ChainID = 2
	param.GenesisHeader = header7152785
	sink := common.NewZeroCopySink(nil)
	param.Serialization(sink)

	tx := &types.Transaction{
		SignedAddr: []common.Address{acct.Address},
	}

	native := NewNative(sink.Bytes(), tx, nil)
	ethHandler := NewETHHandler()
	err := ethHandler.SyncGenesisHeader(native)
	assert.Equal(t, GENESIS_PARAM_ERROR, typeOfError(err))
}

func TestSyncBlockHeader(t *testing.T) {
	ethHandler := NewETHHandler()
	var native *native.NativeService
	{
		header7152785, _ := hex.DecodeString("7b22706172656e7448617368223a22307837633137326261396464383763363163616531643162613031626239356366353830366465313835653966613030313065343137656666353135356335366537222c2273686133556e636c6573223a22307831646363346465386465633735643761616238356235363762366363643431616433313234353162393438613734313366306131343266643430643439333437222c226d696e6572223a22307836333562343736346431393339646661636433613830313437323631353961626332373762656363222c227374617465526f6f74223a22307838366233376564663162343537663566393664333162303963343865306133653863333738616138666531386331623431343331363331623037643430343931222c227472616e73616374696f6e73526f6f74223a22307835626663393365366461343263383138343134393766366538303762373731366161613064313432396132313130653661323737373566336631373538343536222c227265636569707473526f6f74223a22307839303533306462303165613761636466306430613334323536343934343463333633303365383231363464616334303532303464653839633837356532636464222c226c6f6773426c6f6f6d223ac22646966666963756c7479223a2230783130326535363063222c226e756d626572223a223078366432343931222c226761734c696d6974223a223078376131323164222c2267617355736564223a223078363330633536222c2274696d657374616d70223a2230783565323431626434222c22657874726144617461223a2230786465383330323035306438663530363137323639373437393264343537343638363537323635373536643836333132653333333832653330383236633639222c226d697848617368223a22307837386637386462346565353132336139386530363361663339646663663965633464333863373739383434376462323235386665383232363437613133643465222c226e6f6e6365223a22307832376132383132336631393365663439222c2268617368223a22307839306131626339633566326532396365316636303562323366336661366262303634666462653535336138313632626664666133623962623864303630306537227d")
		param := new(scom.SyncGenesisHeaderParam)
		param.ChainID = 2
		param.GenesisHeader = header7152785
		sink := common.NewZeroCopySink(nil)
		param.Serialization(sink)

		tx := &types.Transaction{
			SignedAddr: []common.Address{acct.Address},
		}

		native = NewNative(sink.Bytes(), tx, nil)
		err := ethHandler.SyncGenesisHeader(native)
		assert.Equal(t, SUCCESS, typeOfError(err))
		height := getLatestHeight(native)
		assert.Equal(t, uint64(7152785), height)
		header7152785Hash := getHeaderHashByHeight(native, 7152785)
		assert.Equal(t, true, bytes.Equal(ethcommon.HexToHash("90a1bc9c5f2e29ce1f605b23f3fa6bb064fdbe553a8162bfdfa3b9bb8d0600e7").Bytes(), header7152785Hash.Bytes()))
		header7152785_formstore := getHeaderByHash(native, header7152785Hash)
		assert.Equal(t, true, bytes.Equal(header7152785_formstore, header7152785))
	}
	{
		header7152786, _ := hex.DecodeString("7b22706172656e7448617368223a22307839306131626339633566326532396365316636303562323366336661366262303634666462653535336138313632626664666133623962623864303630306537222c2273686133556e636c6573223a22307831646363346465386465633735643761616238356235363762366363643431616433313234353162393438613734313366306131343266643430643439333437222c226d696e6572223a22307836333562343736346431393339646661636433613830313437323631353961626332373762656363222c227374617465526f6f74223a22307834633339303734363531623030313530643364376231373238616339393233303832303333323833393236316665353163313137643733373661326531323833222c227472616e73616374696f6e73526f6f74223a22307836396434636538326365373862643933343835393464636530656562323836343765623339306665383439373031363666376234383833393264306539356563222c227265636569707473526f6f74223a22307831356166306136386230393636333735353164326433623765396665643762336334653738636632393938613334383730393030386336346233646162323631222c226c6f6773426c6f6f6d223ac22646966666963756c7479223a2230783130326335303432222c226e756d626572223a223078366432343932222c226761734c696d6974223a223078376131323164222c2267617355736564223a223078343531636537222c2274696d657374616d70223a2230783565323431626565222c22657874726144617461223a2230786465383330323035306438663530363137323639373437393264343537343638363537323635373536643836333132653333333832653330383236633639222c226d697848617368223a22307837343738626565613836353939623232643066336438383330376665373263666636343039393237383966313063643838653037303362346531643961613063222c226e6f6e6365223a22307832376132383132336534353066623130222c2268617368223a22307862306662646565653732303537643031326536616563633864663134306630333330653131303563663662303465363831663065313963326361383333653365227d")
		header7152787, _ := hex.DecodeString("7b22706172656e7448617368223a22307862306662646565653732303537643031326536616563633864663134306630333330653131303563663662303465363831663065313963326361383333653365222c2273686133556e636c6573223a22307865393661396264646663666531303636346335363464663135356130353565343766303332353863353261656633333632343231336462346261313036373137222c226d696e6572223a22307836333562343736346431393339646661636433613830313437323631353961626332373762656363222c227374617465526f6f74223a22307834663232303139623633336634383236653335373761663733643263373634626464613965353536336163633539316465663434613730366535353530343136222c227472616e73616374696f6e73526f6f74223a22307830313636623137313666323763356339346239653763393831373464643137333433353037616139383466313639653766646435306561386236303461313364222c227265636569707473526f6f74223a22307833323233626536323336316331343732646562303439656333323935633463653033396435663731613364373230363263613634306234333834336362303130222c226c6f6773426c6f6f6d223ac22646966666963756c7479223a2230783130326535356363222c226e756d626572223a223078366432343933222c226761734c696d6974223a223078376131323164222c2267617355736564223a2230783430633539222c2274696d657374616d70223a2230783565323431626636222c22657874726144617461223a2230786465383330323035306438663530363137323639373437393264343537343638363537323635373536643836333132653333333832653330383236633639222c226d697848617368223a22307832313130396338656635306362386661326265393839353561613730656436623666386131326538343461303639316362373035616437366339373735623333222c226e6f6e6365223a22307832376132383132336635613864313233222c2268617368223a22307863653836623834346535363634633733373761306138336333353962326161333734363330376630616139346161636531373738353563396662333665666465227d")
		header7152788, _ := hex.DecodeString("7b22706172656e7448617368223a22307863653836623834346535363634633733373761306138336333353962326161333734363330376630616139346161636531373738353563396662333665666465222c2273686133556e636c6573223a22307831643036333465386263313038313239353439636137393366383761616330373861633731663130643564376136636337396361656136306466346137316333222c226d696e6572223a22307836333562343736346431393339646661636433613830313437323631353961626332373762656363222c227374617465526f6f74223a22307832383138383235626463353233316136363730643464313037393430613737623437626562383830663034376339613064303838623836663430373233326261222c227472616e73616374696f6e73526f6f74223a22307836323139303066326536613532363163306466323339623761383732363239646335373332396333346337636663613735333732303339616539646365376432222c227265636569707473526f6f74223a22307862316632326362656435373565623037643931636233666265616262633338656361626262303432626238396430336336343061366239616464646532623162222c226c6f6773426c6f6f6d223ac22646966666963756c7479223a2230783130326335303032222c226e756d626572223a223078366432343934222c226761734c696d6974223a223078376131323164222c2267617355736564223a223078373935333737222c2274696d657374616d70223a2230783565323431633136222c22657874726144617461223a2230786465383330323035306438663530363137323639373437393264343537343638363537323635373536643836333132653333333832653330383236633639222c226d697848617368223a22307866613436643631383965396366633235306135323133613039613362643764363261353465323730653261306334343037623237393631623734333161643461222c226e6f6e6365223a22307832376132383132336536626230626136222c2268617368223a22307832363332333433326233346637386239396436613138663731383266633561393330313435623666616332306561363661343761653537366163636564373436227d")
		header7152789, _ := hex.DecodeString("7b22706172656e7448617368223a22307832363332333433326233346637386239396436613138663731383266633561393330313435623666616332306561363661343761653537366163636564373436222c2273686133556e636c6573223a22307839643664313430656132383865336162646638663237373934373531653339663565303537626531636331316332313131366534623136396238303439643630222c226d696e6572223a22307834636366623330333962373864333933383538383135373536346339616435353962616661623934222c227374617465526f6f74223a22307836393662373031343337346635323264663131306434623339643930666435646561303739383631313735333261663330373135376532383238633031363533222c227472616e73616374696f6e73526f6f74223a22307837636632333834613936383466393131326537663163623261653632323061626562613862316334663631333038323661333861393034643536386134633166222c227265636569707473526f6f74223a22307836363834383130643063636462626262633263396264336233643866336631316131306261653464353737353766643032306163393465623733356638336235222c226c6f6773426c6f6f6d223ac22646966666963756c7479223a2230783130326535353863222c226e756d626572223a223078366432343935222c226761734c696d6974223a223078376131323030222c2267617355736564223a223078346265383863222c2274696d657374616d70223a2230783565323431633232222c22657874726144617461223a2230786438383330313039303938343637363537343638383836373666333132653331333332653334383536633639366537353738222c226d697848617368223a22307832646235653236613432336233376665306432353339343864366637393565376133613362323436386337303264373164616666393161303064386136623962222c226e6f6e6365223a22307837353432376133303034663233363663222c2268617368223a22307864386665663036663039653562663432643661663834376232323364323539643930353164633163306164613239646466393237646631303430383031613335227d")

		param := new(scom.SyncBlockHeaderParam)
		param.ChainID = 2
		param.Address = acct.Address
		param.Headers = append(param.Headers, header7152786)
		param.Headers = append(param.Headers, header7152787)
		param.Headers = append(param.Headers, header7152788)
		param.Headers = append(param.Headers, header7152789)
		sink := common.NewZeroCopySink(nil)
		param.Serialization(sink)

		native = NewNative(sink.Bytes(), nil, native.GetCacheDB())
		err := ethHandler.SyncBlockHeader(native)
		assert.Equal(t, SUCCESS, typeOfError(err))
		height := getLatestHeight(native)
		assert.Equal(t, uint64(7152789), height)

		header7152789Hash := getHeaderHashByHeight(native, 7152789)
		assert.Equal(t, true, bytes.Equal(ethcommon.HexToHash("d8fef06f09e5bf42d6af847b223d259d9051dc1c0ada29ddf927df1040801a35").Bytes(), header7152789Hash.Bytes()))
		header7152789_formstore := getHeaderByHash(native, header7152789Hash)
		assert.Equal(t, true, bytes.Equal(header7152789_formstore, header7152789))

		header7152788Hash := getHeaderHashByHeight(native, 7152788)
		assert.Equal(t, true, bytes.Equal(ethcommon.HexToHash("26323432b34f78b99d6a18f7182fc5a930145b6fac20ea66a47ae576acced746").Bytes(), header7152788Hash.Bytes()))
		header7152788_formstore := getHeaderByHash(native, header7152788Hash)
		assert.Equal(t, true, bytes.Equal(header7152788_formstore, header7152788))

		header7152787Hash := getHeaderHashByHeight(native, 7152787)
		assert.Equal(t, true, bytes.Equal(ethcommon.HexToHash("ce86b844e5664c7377a0a83c359b2aa3746307f0aa94aace177855c9fb36efde").Bytes(), header7152787Hash.Bytes()))
		header7152787_formstore := getHeaderByHash(native, header7152787Hash)
		assert.Equal(t, true, bytes.Equal(header7152787_formstore, header7152787))

		header7152786Hash := getHeaderHashByHeight(native, 7152786)
		assert.Equal(t, true, bytes.Equal(ethcommon.HexToHash("b0fbdeee72057d012e6aecc8df140f0330e1105cf6b04e681f0e19c2ca833e3e").Bytes(), header7152786Hash.Bytes()))
		header7152786_formstore := getHeaderByHash(native, header7152786Hash)
		assert.Equal(t, true, bytes.Equal(header7152786_formstore, header7152786))
	}
}

func TestSyncBlockHeaderTwice(t *testing.T) {
	ethHandler := NewETHHandler()
	var native *native.NativeService
	{
		header7152785, _ := hex.DecodeString("7b22706172656e7448617368223a22307837633137326261396464383763363163616531643162613031626239356366353830366465313835653966613030313065343137656666353135356335366537222c2273686133556e636c6573223a22307831646363346465386465633735643761616238356235363762366363643431616433313234353162393438613734313366306131343266643430643439333437222c226d696e6572223a22307836333562343736346431393339646661636433613830313437323631353961626332373762656363222c227374617465526f6f74223a22307838366233376564663162343537663566393664333162303963343865306133653863333738616138666531386331623431343331363331623037643430343931222c227472616e73616374696f6e73526f6f74223a22307835626663393365366461343263383138343134393766366538303762373731366161613064313432396132313130653661323737373566336631373538343536222c227265636569707473526f6f74223a22307839303533306462303165613761636466306430613334323536343934343463333633303365383231363464616334303532303464653839633837356532636464222c226c6f6773426c6f6f6d223ac22646966666963756c7479223a2230783130326535363063222c226e756d626572223a223078366432343931222c226761734c696d6974223a223078376131323164222c2267617355736564223a223078363330633536222c2274696d657374616d70223a2230783565323431626434222c22657874726144617461223a2230786465383330323035306438663530363137323639373437393264343537343638363537323635373536643836333132653333333832653330383236633639222c226d697848617368223a22307837386637386462346565353132336139386530363361663339646663663965633464333863373739383434376462323235386665383232363437613133643465222c226e6f6e6365223a22307832376132383132336631393365663439222c2268617368223a22307839306131626339633566326532396365316636303562323366336661366262303634666462653535336138313632626664666133623962623864303630306537227d")
		param := new(scom.SyncGenesisHeaderParam)
		param.ChainID = 2
		param.GenesisHeader = header7152785
		sink := common.NewZeroCopySink(nil)
		param.Serialization(sink)

		tx := &types.Transaction{
			SignedAddr: []common.Address{acct.Address},
		}

		native = NewNative(sink.Bytes(), tx, nil)
		err := ethHandler.SyncGenesisHeader(native)
		assert.Equal(t, SUCCESS, typeOfError(err))
		height := getLatestHeight(native)
		assert.Equal(t, uint64(7152785), height)
		header7152785Hash := getHeaderHashByHeight(native, 7152785)
		assert.Equal(t, true, bytes.Equal(ethcommon.HexToHash("90a1bc9c5f2e29ce1f605b23f3fa6bb064fdbe553a8162bfdfa3b9bb8d0600e7").Bytes(), header7152785Hash.Bytes()))
		header7152785_formstore := getHeaderByHash(native, header7152785Hash)
		assert.Equal(t, true, bytes.Equal(header7152785_formstore, header7152785))
	}
	{
		header7152786, _ := hex.DecodeString("7b22706172656e7448617368223a22307839306131626339633566326532396365316636303562323366336661366262303634666462653535336138313632626664666133623962623864303630306537222c2273686133556e636c6573223a22307831646363346465386465633735643761616238356235363762366363643431616433313234353162393438613734313366306131343266643430643439333437222c226d696e6572223a22307836333562343736346431393339646661636433613830313437323631353961626332373762656363222c227374617465526f6f74223a22307834633339303734363531623030313530643364376231373238616339393233303832303333323833393236316665353163313137643733373661326531323833222c227472616e73616374696f6e73526f6f74223a22307836396434636538326365373862643933343835393464636530656562323836343765623339306665383439373031363666376234383833393264306539356563222c227265636569707473526f6f74223a22307831356166306136386230393636333735353164326433623765396665643762336334653738636632393938613334383730393030386336346233646162323631222c226c6f6773426c6f6f6d223ac22646966666963756c7479223a2230783130326335303432222c226e756d626572223a223078366432343932222c226761734c696d6974223a223078376131323164222c2267617355736564223a223078343531636537222c2274696d657374616d70223a2230783565323431626565222c22657874726144617461223a2230786465383330323035306438663530363137323639373437393264343537343638363537323635373536643836333132653333333832653330383236633639222c226d697848617368223a22307837343738626565613836353939623232643066336438383330376665373263666636343039393237383966313063643838653037303362346531643961613063222c226e6f6e6365223a22307832376132383132336534353066623130222c2268617368223a22307862306662646565653732303537643031326536616563633864663134306630333330653131303563663662303465363831663065313963326361383333653365227d")
		header7152787, _ := hex.DecodeString("7b22706172656e7448617368223a22307862306662646565653732303537643031326536616563633864663134306630333330653131303563663662303465363831663065313963326361383333653365222c2273686133556e636c6573223a22307865393661396264646663666531303636346335363464663135356130353565343766303332353863353261656633333632343231336462346261313036373137222c226d696e6572223a22307836333562343736346431393339646661636433613830313437323631353961626332373762656363222c227374617465526f6f74223a22307834663232303139623633336634383236653335373761663733643263373634626464613965353536336163633539316465663434613730366535353530343136222c227472616e73616374696f6e73526f6f74223a22307830313636623137313666323763356339346239653763393831373464643137333433353037616139383466313639653766646435306561386236303461313364222c227265636569707473526f6f74223a22307833323233626536323336316331343732646562303439656333323935633463653033396435663731613364373230363263613634306234333834336362303130222c226c6f6773426c6f6f6d223ac22646966666963756c7479223a2230783130326535356363222c226e756d626572223a223078366432343933222c226761734c696d6974223a223078376131323164222c2267617355736564223a2230783430633539222c2274696d657374616d70223a2230783565323431626636222c22657874726144617461223a2230786465383330323035306438663530363137323639373437393264343537343638363537323635373536643836333132653333333832653330383236633639222c226d697848617368223a22307832313130396338656635306362386661326265393839353561613730656436623666386131326538343461303639316362373035616437366339373735623333222c226e6f6e6365223a22307832376132383132336635613864313233222c2268617368223a22307863653836623834346535363634633733373761306138336333353962326161333734363330376630616139346161636531373738353563396662333665666465227d")
		param := new(scom.SyncBlockHeaderParam)
		param.ChainID = 2
		param.Address = acct.Address
		param.Headers = append(param.Headers, header7152786)
		param.Headers = append(param.Headers, header7152787)
		sink := common.NewZeroCopySink(nil)
		param.Serialization(sink)
		native = NewNative(sink.Bytes(), nil, native.GetCacheDB())
		err := ethHandler.SyncBlockHeader(native)
		assert.Equal(t, SUCCESS, typeOfError(err))
		height := getLatestHeight(native)
		assert.Equal(t, uint64(7152787), height)
	}
	{
		header7152786, _ := hex.DecodeString("7b22706172656e7448617368223a22307839306131626339633566326532396365316636303562323366336661366262303634666462653535336138313632626664666133623962623864303630306537222c2273686133556e636c6573223a22307831646363346465386465633735643761616238356235363762366363643431616433313234353162393438613734313366306131343266643430643439333437222c226d696e6572223a22307836333562343736346431393339646661636433613830313437323631353961626332373762656363222c227374617465526f6f74223a22307834633339303734363531623030313530643364376231373238616339393233303832303333323833393236316665353163313137643733373661326531323833222c227472616e73616374696f6e73526f6f74223a22307836396434636538326365373862643933343835393464636530656562323836343765623339306665383439373031363666376234383833393264306539356563222c227265636569707473526f6f74223a22307831356166306136386230393636333735353164326433623765396665643762336334653738636632393938613334383730393030386336346233646162323631222c226c6f6773426c6f6f6d223ac22646966666963756c7479223a2230783130326335303432222c226e756d626572223a223078366432343932222c226761734c696d6974223a223078376131323164222c2267617355736564223a223078343531636537222c2274696d657374616d70223a2230783565323431626565222c22657874726144617461223a2230786465383330323035306438663530363137323639373437393264343537343638363537323635373536643836333132653333333832653330383236633639222c226d697848617368223a22307837343738626565613836353939623232643066336438383330376665373263666636343039393237383966313063643838653037303362346531643961613063222c226e6f6e6365223a22307832376132383132336534353066623130222c2268617368223a22307862306662646565653732303537643031326536616563633864663134306630333330653131303563663662303465363831663065313963326361383333653365227d")
		header7152787, _ := hex.DecodeString("7b22706172656e7448617368223a22307862306662646565653732303537643031326536616563633864663134306630333330653131303563663662303465363831663065313963326361383333653365222c2273686133556e636c6573223a22307865393661396264646663666531303636346335363464663135356130353565343766303332353863353261656633333632343231336462346261313036373137222c226d696e6572223a22307836333562343736346431393339646661636433613830313437323631353961626332373762656363222c227374617465526f6f74223a22307834663232303139623633336634383236653335373761663733643263373634626464613965353536336163633539316465663434613730366535353530343136222c227472616e73616374696f6e73526f6f74223a22307830313636623137313666323763356339346239653763393831373464643137333433353037616139383466313639653766646435306561386236303461313364222c227265636569707473526f6f74223a22307833323233626536323336316331343732646562303439656333323935633463653033396435663731613364373230363263613634306234333834336362303130222c226c6f6773426c6f6f6d223ac22646966666963756c7479223a2230783130326535356363222c226e756d626572223a223078366432343933222c226761734c696d6974223a223078376131323164222c2267617355736564223a2230783430633539222c2274696d657374616d70223a2230783565323431626636222c22657874726144617461223a2230786465383330323035306438663530363137323639373437393264343537343638363537323635373536643836333132653333333832653330383236633639222c226d697848617368223a22307832313130396338656635306362386661326265393839353561613730656436623666386131326538343461303639316362373035616437366339373735623333222c226e6f6e6365223a22307832376132383132336635613864313233222c2268617368223a22307863653836623834346535363634633733373761306138336333353962326161333734363330376630616139346161636531373738353563396662333665666465227d")
		header7152788, _ := hex.DecodeString("7b22706172656e7448617368223a22307863653836623834346535363634633733373761306138336333353962326161333734363330376630616139346161636531373738353563396662333665666465222c2273686133556e636c6573223a22307831643036333465386263313038313239353439636137393366383761616330373861633731663130643564376136636337396361656136306466346137316333222c226d696e6572223a22307836333562343736346431393339646661636433613830313437323631353961626332373762656363222c227374617465526f6f74223a22307832383138383235626463353233316136363730643464313037393430613737623437626562383830663034376339613064303838623836663430373233326261222c227472616e73616374696f6e73526f6f74223a22307836323139303066326536613532363163306466323339623761383732363239646335373332396333346337636663613735333732303339616539646365376432222c227265636569707473526f6f74223a22307862316632326362656435373565623037643931636233666265616262633338656361626262303432626238396430336336343061366239616464646532623162222c226c6f6773426c6f6f6d223ac22646966666963756c7479223a2230783130326335303032222c226e756d626572223a223078366432343934222c226761734c696d6974223a223078376131323164222c2267617355736564223a223078373935333737222c2274696d657374616d70223a2230783565323431633136222c22657874726144617461223a2230786465383330323035306438663530363137323639373437393264343537343638363537323635373536643836333132653333333832653330383236633639222c226d697848617368223a22307866613436643631383965396366633235306135323133613039613362643764363261353465323730653261306334343037623237393631623734333161643461222c226e6f6e6365223a22307832376132383132336536626230626136222c2268617368223a22307832363332333433326233346637386239396436613138663731383266633561393330313435623666616332306561363661343761653537366163636564373436227d")
		header7152789, _ := hex.DecodeString("7b22706172656e7448617368223a22307832363332333433326233346637386239396436613138663731383266633561393330313435623666616332306561363661343761653537366163636564373436222c2273686133556e636c6573223a22307839643664313430656132383865336162646638663237373934373531653339663565303537626531636331316332313131366534623136396238303439643630222c226d696e6572223a22307834636366623330333962373864333933383538383135373536346339616435353962616661623934222c227374617465526f6f74223a22307836393662373031343337346635323264663131306434623339643930666435646561303739383631313735333261663330373135376532383238633031363533222c227472616e73616374696f6e73526f6f74223a22307837636632333834613936383466393131326537663163623261653632323061626562613862316334663631333038323661333861393034643536386134633166222c227265636569707473526f6f74223a22307836363834383130643063636462626262633263396264336233643866336631316131306261653464353737353766643032306163393465623733356638336235222c226c6f6773426c6f6f6d223ac22646966666963756c7479223a2230783130326535353863222c226e756d626572223a223078366432343935222c226761734c696d6974223a223078376131323030222c2267617355736564223a223078346265383863222c2274696d657374616d70223a2230783565323431633232222c22657874726144617461223a2230786438383330313039303938343637363537343638383836373666333132653331333332653334383536633639366537353738222c226d697848617368223a22307832646235653236613432336233376665306432353339343864366637393565376133613362323436386337303264373164616666393161303064386136623962222c226e6f6e6365223a22307837353432376133303034663233363663222c2268617368223a22307864386665663036663039653562663432643661663834376232323364323539643930353164633163306164613239646466393237646631303430383031613335227d")

		param := new(scom.SyncBlockHeaderParam)
		param.ChainID = 2
		param.Address = acct.Address
		param.Headers = append(param.Headers, header7152786)
		param.Headers = append(param.Headers, header7152787)
		param.Headers = append(param.Headers, header7152788)
		param.Headers = append(param.Headers, header7152789)
		sink := common.NewZeroCopySink(nil)
		param.Serialization(sink)
		native = NewNative(sink.Bytes(), nil, native.GetCacheDB())
		err := ethHandler.SyncBlockHeader(native)
		assert.Equal(t, SUCCESS, typeOfError(err))
		height := getLatestHeight(native)
		assert.Equal(t, uint64(7152789), height)

		header7152789Hash := getHeaderHashByHeight(native, 7152789)
		assert.Equal(t, true, bytes.Equal(ethcommon.HexToHash("d8fef06f09e5bf42d6af847b223d259d9051dc1c0ada29ddf927df1040801a35").Bytes(), header7152789Hash.Bytes()))
		header7152789_formstore := getHeaderByHash(native, header7152789Hash)
		assert.Equal(t, true, bytes.Equal(header7152789_formstore, header7152789))

		header7152788Hash := getHeaderHashByHeight(native, 7152788)
		assert.Equal(t, true, bytes.Equal(ethcommon.HexToHash("26323432b34f78b99d6a18f7182fc5a930145b6fac20ea66a47ae576acced746").Bytes(), header7152788Hash.Bytes()))
		header7152788_formstore := getHeaderByHash(native, header7152788Hash)
		assert.Equal(t, true, bytes.Equal(header7152788_formstore, header7152788))

		header7152787Hash := getHeaderHashByHeight(native, 7152787)
		assert.Equal(t, true, bytes.Equal(ethcommon.HexToHash("ce86b844e5664c7377a0a83c359b2aa3746307f0aa94aace177855c9fb36efde").Bytes(), header7152787Hash.Bytes()))
		header7152787_formstore := getHeaderByHash(native, header7152787Hash)
		assert.Equal(t, true, bytes.Equal(header7152787_formstore, header7152787))

		header7152786Hash := getHeaderHashByHeight(native, 7152786)
		assert.Equal(t, true, bytes.Equal(ethcommon.HexToHash("b0fbdeee72057d012e6aecc8df140f0330e1105cf6b04e681f0e19c2ca833e3e").Bytes(), header7152786Hash.Bytes()))
		header7152786_formstore := getHeaderByHash(native, header7152786Hash)
		assert.Equal(t, true, bytes.Equal(header7152786_formstore, header7152786))
	}
}

func TestSyncBlockHeader_ParamError(t *testing.T) {
	ethHandler := NewETHHandler()
	var native *native.NativeService
	{
		header7152785, _ := hex.DecodeString("7b22706172656e7448617368223a22307837633137326261396464383763363163616531643162613031626239356366353830366465313835653966613030313065343137656666353135356335366537222c2273686133556e636c6573223a22307831646363346465386465633735643761616238356235363762366363643431616433313234353162393438613734313366306131343266643430643439333437222c226d696e6572223a22307836333562343736346431393339646661636433613830313437323631353961626332373762656363222c227374617465526f6f74223a22307838366233376564663162343537663566393664333162303963343865306133653863333738616138666531386331623431343331363331623037643430343931222c227472616e73616374696f6e73526f6f74223a22307835626663393365366461343263383138343134393766366538303762373731366161613064313432396132313130653661323737373566336631373538343536222c227265636569707473526f6f74223a22307839303533306462303165613761636466306430613334323536343934343463333633303365383231363464616334303532303464653839633837356532636464222c226c6f6773426c6f6f6d223ac22646966666963756c7479223a2230783130326535363063222c226e756d626572223a223078366432343931222c226761734c696d6974223a223078376131323164222c2267617355736564223a223078363330633536222c2274696d657374616d70223a2230783565323431626434222c22657874726144617461223a2230786465383330323035306438663530363137323639373437393264343537343638363537323635373536643836333132653333333832653330383236633639222c226d697848617368223a22307837386637386462346565353132336139386530363361663339646663663965633464333863373739383434376462323235386665383232363437613133643465222c226e6f6e6365223a22307832376132383132336631393365663439222c2268617368223a22307839306131626339633566326532396365316636303562323366336661366262303634666462653535336138313632626664666133623962623864303630306537227d")
		param := new(scom.SyncGenesisHeaderParam)
		param.ChainID = 2
		param.GenesisHeader = header7152785
		sink := common.NewZeroCopySink(nil)
		param.Serialization(sink)

		tx := &types.Transaction{
			SignedAddr: []common.Address{acct.Address},
		}

		native = NewNative(sink.Bytes(), tx, nil)
		err := ethHandler.SyncGenesisHeader(native)
		assert.Equal(t, SUCCESS, typeOfError(err))
		height := getLatestHeight(native)
		assert.Equal(t, uint64(7152785), height)
		header7152785Hash := getHeaderHashByHeight(native, 7152785)
		assert.Equal(t, true, bytes.Equal(ethcommon.HexToHash("90a1bc9c5f2e29ce1f605b23f3fa6bb064fdbe553a8162bfdfa3b9bb8d0600e7").Bytes(), header7152785Hash.Bytes()))
		header7152785_formstore := getHeaderByHash(native, header7152785Hash)
		assert.Equal(t, true, bytes.Equal(header7152785_formstore, header7152785))
	}
	//header7152788 is wrong
	header7152786, _ := hex.DecodeString("7b22706172656e7448617368223a22307839306131626339633566326532396365316636303562323366336661366262303634666462653535336138313632626664666133623962623864303630306537222c2273686133556e636c6573223a22307831646363346465386465633735643761616238356235363762366363643431616433313234353162393438613734313366306131343266643430643439333437222c226d696e6572223a22307836333562343736346431393339646661636433613830313437323631353961626332373762656363222c227374617465526f6f74223a22307834633339303734363531623030313530643364376231373238616339393233303832303333323833393236316665353163313137643733373661326531323833222c227472616e73616374696f6e73526f6f74223a22307836396434636538326365373862643933343835393464636530656562323836343765623339306665383439373031363666376234383833393264306539356563222c227265636569707473526f6f74223a22307831356166306136386230393636333735353164326433623765396665643762336334653738636632393938613334383730393030386336346233646162323631222c226c6f6773426c6f6f6d223ac22646966666963756c7479223a2230783130326335303432222c226e756d626572223a223078366432343932222c226761734c696d6974223a223078376131323164222c2267617355736564223a223078343531636537222c2274696d657374616d70223a2230783565323431626565222c22657874726144617461223a2230786465383330323035306438663530363137323639373437393264343537343638363537323635373536643836333132653333333832653330383236633639222c226d697848617368223a22307837343738626565613836353939623232643066336438383330376665373263666636343039393237383966313063643838653037303362346531643961613063222c226e6f6e6365223a22307832376132383132336534353066623130222c2268617368223a22307862306662646565653732303537643031326536616563633864663134306630333330653131303563663662303465363831663065313963326361383333653365227d")
	header7152787, _ := hex.DecodeString("7b22706172656e7448617368223a22307862306662646565653732303537643031326536616563633864663134306630333330653131303563663662303465363831663065313963326361383333653365222c2273686133556e636c6573223a22307865393661396264646663666531303636346335363464663135356130353565343766303332353863353261656633333632343231336462346261313036373137222c226d696e6572223a22307836333562343736346431393339646661636433613830313437323631353961626332373762656363222c227374617465526f6f74223a22307834663232303139623633336634383236653335373761663733643263373634626464613965353536336163633539316465663434613730366535353530343136222c227472616e73616374696f6e73526f6f74223a22307830313636623137313666323763356339346239653763393831373464643137333433353037616139383466313639653766646435306561386236303461313364222c227265636569707473526f6f74223a22307833323233626536323336316331343732646562303439656333323935633463653033396435663731613364373230363263613634306234333834336362303130222c226c6f6773426c6f6f6d223ac22646966666963756c7479223a2230783130326535356363222c226e756d626572223a223078366432343933222c226761734c696d6974223a223078376131323164222c2267617355736564223a2230783430633539222c2274696d657374616d70223a2230783565323431626636222c22657874726144617461223a2230786465383330323035306438663530363137323639373437393264343537343638363537323635373536643836333132653333333832653330383236633639222c226d697848617368223a22307832313130396338656635306362386661326265393839353561613730656436623666386131326538343461303639316362373035616437366339373735623333222c226e6f6e6365223a22307832376132383132336635613864313233222c2268617368223a22307863653836623834346535363634633733373761306138336333353962326161333734363330376630616139346161636531373738353563396662333665666465227d")
	header7152788, _ := hex.DecodeString("7b22706172656e7436623834346535363634633733373761306138336333353962326161333734363330376630616139346161636531373738353563396662333665666465222c2273686133556e636c6573223a22307831643036333465386263313038313239353439636137393366383761616330373861633731663130643564376136636337396361656136306466346137316333222c226d696e6572223a22307836333562343736346431393339646661636433613830313437323631353961626332373762656363222c227374617465526f6f74223a22307832383138383235626463353233316136363730643464313037393430613737623437626562383830663034376339613064303838623836663430373233326261222c227472616e73616374696f6e73526f6f74223a22307836323139303066326536613532363163306466323339623761383732363239646335373332396333346337636663613735333732303339616539646365376432222c227265636569707473526f6f74223a22307862316632326362656435373565623037643931636233666265616262633338656361626262303432626238396430336336343061366239616464646532623162222c226c6f6773426c6f6f6d223ac22646966666963756c7479223a2230783130326335303032222c226e756d626572223a223078366432343934222c226761734c696d6974223a223078376131323164222c2267617355736564223a223078373935333737222c2274696d657374616d70223a2230783565323431633136222c22657874726144617461223a2230786465383330323035306438663530363137323639373437393264343537343638363537323635373536643836333132653333333832653330383236633639222c226d697848617368223a22307866613436643631383965396366633235306135323133613039613362643764363261353465323730653261306334343037623237393631623734333161643461222c226e6f6e6365223a22307832376132383132336536626230626136222c2268617368223a22307832363332333433326233346637386239396436613138663731383266633561393330313435623666616332306561363661343761653537366163636564373436227d")
	header7152789, _ := hex.DecodeString("7b22706172656e7448617368223a22307832363332333433326233346637386239396436613138663731383266633561393330313435623666616332306561363661343761653537366163636564373436222c2273686133556e636c6573223a22307839643664313430656132383865336162646638663237373934373531653339663565303537626531636331316332313131366534623136396238303439643630222c226d696e6572223a22307834636366623330333962373864333933383538383135373536346339616435353962616661623934222c227374617465526f6f74223a22307836393662373031343337346635323264663131306434623339643930666435646561303739383631313735333261663330373135376532383238633031363533222c227472616e73616374696f6e73526f6f74223a22307837636632333834613936383466393131326537663163623261653632323061626562613862316334663631333038323661333861393034643536386134633166222c227265636569707473526f6f74223a22307836363834383130643063636462626262633263396264336233643866336631316131306261653464353737353766643032306163393465623733356638336235222c226c6f6773426c6f6f6d223ac22646966666963756c7479223a2230783130326535353863222c226e756d626572223a223078366432343935222c226761734c696d6974223a223078376131323030222c2267617355736564223a223078346265383863222c2274696d657374616d70223a2230783565323431633232222c22657874726144617461223a2230786438383330313039303938343637363537343638383836373666333132653331333332653334383536633639366537353738222c226d697848617368223a22307832646235653236613432336233376665306432353339343864366637393565376133613362323436386337303264373164616666393161303064386136623962222c226e6f6e6365223a22307837353432376133303034663233363663222c2268617368223a22307864386665663036663039653562663432643661663834376232323364323539643930353164633163306164613239646466393237646631303430383031613335227d")

	param := new(scom.SyncBlockHeaderParam)
	param.ChainID = 2
	param.Address = acct.Address
	param.Headers = append(param.Headers, header7152786)
	param.Headers = append(param.Headers, header7152787)
	param.Headers = append(param.Headers, header7152788)
	param.Headers = append(param.Headers, header7152789)
	sink := common.NewZeroCopySink(nil)
	param.Serialization(sink)

	native = NewNative(sink.Bytes(), nil, native.GetCacheDB())
	err := ethHandler.SyncBlockHeader(native)
	assert.Equal(t, SYNCBLOCK_PARAM_ERROR, typeOfError(err))
	height := getLatestHeight(native)
	assert.Equal(t, uint64(7152787), height)
}

func TestSyncBlockHeader_OrphanBlock(t *testing.T) {
	ethHandler := NewETHHandler()
	var native *native.NativeService
	{
		header7152785, _ := hex.DecodeString("7b22706172656e7448617368223a22307837633137326261396464383763363163616531643162613031626239356366353830366465313835653966613030313065343137656666353135356335366537222c2273686133556e636c6573223a22307831646363346465386465633735643761616238356235363762366363643431616433313234353162393438613734313366306131343266643430643439333437222c226d696e6572223a22307836333562343736346431393339646661636433613830313437323631353961626332373762656363222c227374617465526f6f74223a22307838366233376564663162343537663566393664333162303963343865306133653863333738616138666531386331623431343331363331623037643430343931222c227472616e73616374696f6e73526f6f74223a22307835626663393365366461343263383138343134393766366538303762373731366161613064313432396132313130653661323737373566336631373538343536222c227265636569707473526f6f74223a22307839303533306462303165613761636466306430613334323536343934343463333633303365383231363464616334303532303464653839633837356532636464222c226c6f6773426c6f6f6d223ac22646966666963756c7479223a2230783130326535363063222c226e756d626572223a223078366432343931222c226761734c696d6974223a223078376131323164222c2267617355736564223a223078363330633536222c2274696d657374616d70223a2230783565323431626434222c22657874726144617461223a2230786465383330323035306438663530363137323639373437393264343537343638363537323635373536643836333132653333333832653330383236633639222c226d697848617368223a22307837386637386462346565353132336139386530363361663339646663663965633464333863373739383434376462323235386665383232363437613133643465222c226e6f6e6365223a22307832376132383132336631393365663439222c2268617368223a22307839306131626339633566326532396365316636303562323366336661366262303634666462653535336138313632626664666133623962623864303630306537227d")
		param := new(scom.SyncGenesisHeaderParam)
		param.ChainID = 2
		param.GenesisHeader = header7152785
		sink := common.NewZeroCopySink(nil)
		param.Serialization(sink)

		tx := &types.Transaction{
			SignedAddr: []common.Address{acct.Address},
		}

		native = NewNative(sink.Bytes(), tx, nil)
		err := ethHandler.SyncGenesisHeader(native)
		assert.Equal(t, SUCCESS, typeOfError(err))
		height := getLatestHeight(native)
		assert.Equal(t, uint64(7152785), height)
		header7152785Hash := getHeaderHashByHeight(native, 7152785)
		assert.Equal(t, true, bytes.Equal(ethcommon.HexToHash("90a1bc9c5f2e29ce1f605b23f3fa6bb064fdbe553a8162bfdfa3b9bb8d0600e7").Bytes(), header7152785Hash.Bytes()))
		header7152785_formstore := getHeaderByHash(native, header7152785Hash)
		assert.Equal(t, true, bytes.Equal(header7152785_formstore, header7152785))
	}
	//header7152788 is missing
	header7152786, _ := hex.DecodeString("7b22706172656e7448617368223a22307839306131626339633566326532396365316636303562323366336661366262303634666462653535336138313632626664666133623962623864303630306537222c2273686133556e636c6573223a22307831646363346465386465633735643761616238356235363762366363643431616433313234353162393438613734313366306131343266643430643439333437222c226d696e6572223a22307836333562343736346431393339646661636433613830313437323631353961626332373762656363222c227374617465526f6f74223a22307834633339303734363531623030313530643364376231373238616339393233303832303333323833393236316665353163313137643733373661326531323833222c227472616e73616374696f6e73526f6f74223a22307836396434636538326365373862643933343835393464636530656562323836343765623339306665383439373031363666376234383833393264306539356563222c227265636569707473526f6f74223a22307831356166306136386230393636333735353164326433623765396665643762336334653738636632393938613334383730393030386336346233646162323631222c226c6f6773426c6f6f6d223ac22646966666963756c7479223a2230783130326335303432222c226e756d626572223a223078366432343932222c226761734c696d6974223a223078376131323164222c2267617355736564223a223078343531636537222c2274696d657374616d70223a2230783565323431626565222c22657874726144617461223a2230786465383330323035306438663530363137323639373437393264343537343638363537323635373536643836333132653333333832653330383236633639222c226d697848617368223a22307837343738626565613836353939623232643066336438383330376665373263666636343039393237383966313063643838653037303362346531643961613063222c226e6f6e6365223a22307832376132383132336534353066623130222c2268617368223a22307862306662646565653732303537643031326536616563633864663134306630333330653131303563663662303465363831663065313963326361383333653365227d")
	header7152787, _ := hex.DecodeString("7b22706172656e7448617368223a22307862306662646565653732303537643031326536616563633864663134306630333330653131303563663662303465363831663065313963326361383333653365222c2273686133556e636c6573223a22307865393661396264646663666531303636346335363464663135356130353565343766303332353863353261656633333632343231336462346261313036373137222c226d696e6572223a22307836333562343736346431393339646661636433613830313437323631353961626332373762656363222c227374617465526f6f74223a22307834663232303139623633336634383236653335373761663733643263373634626464613965353536336163633539316465663434613730366535353530343136222c227472616e73616374696f6e73526f6f74223a22307830313636623137313666323763356339346239653763393831373464643137333433353037616139383466313639653766646435306561386236303461313364222c227265636569707473526f6f74223a22307833323233626536323336316331343732646562303439656333323935633463653033396435663731613364373230363263613634306234333834336362303130222c226c6f6773426c6f6f6d223ac22646966666963756c7479223a2230783130326535356363222c226e756d626572223a223078366432343933222c226761734c696d6974223a223078376131323164222c2267617355736564223a2230783430633539222c2274696d657374616d70223a2230783565323431626636222c22657874726144617461223a2230786465383330323035306438663530363137323639373437393264343537343638363537323635373536643836333132653333333832653330383236633639222c226d697848617368223a22307832313130396338656635306362386661326265393839353561613730656436623666386131326538343461303639316362373035616437366339373735623333222c226e6f6e6365223a22307832376132383132336635613864313233222c2268617368223a22307863653836623834346535363634633733373761306138336333353962326161333734363330376630616139346161636531373738353563396662333665666465227d")
	//header7152788, _ := hex.DecodeString("7b22706172656e7436623834346535363634633733373761306138336333353962326161333734363330376630616139346161636531373738353563396662333665666465222c2273686133556e636c6573223a22307831643036333465386263313038313239353439636137393366383761616330373861633731663130643564376136636337396361656136306466346137316333222c226d696e6572223a22307836333562343736346431393339646661636433613830313437323631353961626332373762656363222c227374617465526f6f74223a22307832383138383235626463353233316136363730643464313037393430613737623437626562383830663034376339613064303838623836663430373233326261222c227472616e73616374696f6e73526f6f74223a22307836323139303066326536613532363163306466323339623761383732363239646335373332396333346337636663613735333732303339616539646365376432222c227265636569707473526f6f74223a22307862316632326362656435373565623037643931636233666265616262633338656361626262303432626238396430336336343061366239616464646532623162222c226c6f6773426c6f6f6d223a2230783030303030303030303030303030343030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030313030303030303030303130323030303030303030303030303030383030303038303030383030303030303030303830303030303030323030303030303030303030303038303030303032303030303030303030343030303030303030303030303030303030303030303030303030303430303030303030303830303030303030303030303030303030303030303030303030343030303030303030303030303030303030303030303030303030303030303031303030383030303030303030303030303130303030303030303430303030303030303830303030303030303230303030303030303030303030323030303030303030303030303030303230303030303030303030303130303030303030303030303230303030303038303030303030303030323030303030303030303230303030303030303230303030303030303030303030303030303030303030303030303130303030303030303030303030303030303830303063303030303030303030303030303130313030303130303030303030303130303030303030303030303030303030303030303030303030303030303030303030303030303030303030343030303030303030222c22646966666963756c7479223a2230783130326335303032222c226e756d626572223a223078366432343934222c226761734c696d6974223a223078376131323164222c2267617355736564223a223078373935333737222c2274696d657374616d70223a2230783565323431633136222c22657874726144617461223a2230786465383330323035306438663530363137323639373437393264343537343638363537323635373536643836333132653333333832653330383236633639222c226d697848617368223a22307866613436643631383965396366633235306135323133613039613362643764363261353465323730653261306334343037623237393631623734333161643461222c226e6f6e6365223a22307832376132383132336536626230626136222c2268617368223a22307832363332333433326233346637386239396436613138663731383266633561393330313435623666616332306561363661343761653537366163636564373436227d")
	header7152789, _ := hex.DecodeString("7b22706172656e7448617368223a22307832363332333433326233346637386239396436613138663731383266633561393330313435623666616332306561363661343761653537366163636564373436222c2273686133556e636c6573223a22307839643664313430656132383865336162646638663237373934373531653339663565303537626531636331316332313131366534623136396238303439643630222c226d696e6572223a22307834636366623330333962373864333933383538383135373536346339616435353962616661623934222c227374617465526f6f74223a22307836393662373031343337346635323264663131306434623339643930666435646561303739383631313735333261663330373135376532383238633031363533222c227472616e73616374696f6e73526f6f74223a22307837636632333834613936383466393131326537663163623261653632323061626562613862316334663631333038323661333861393034643536386134633166222c227265636569707473526f6f74223a22307836363834383130643063636462626262633263396264336233643866336631316131306261653464353737353766643032306163393465623733356638336235222c226c6f6773426c6f6f6d223ac22646966666963756c7479223a2230783130326535353863222c226e756d626572223a223078366432343935222c226761734c696d6974223a223078376131323030222c2267617355736564223a223078346265383863222c2274696d657374616d70223a2230783565323431633232222c22657874726144617461223a2230786438383330313039303938343637363537343638383836373666333132653331333332653334383536633639366537353738222c226d697848617368223a22307832646235653236613432336233376665306432353339343864366637393565376133613362323436386337303264373164616666393161303064386136623962222c226e6f6e6365223a22307837353432376133303034663233363663222c2268617368223a22307864386665663036663039653562663432643661663834376232323364323539643930353164633163306164613239646466393237646631303430383031613335227d")

	param := new(scom.SyncBlockHeaderParam)
	param.ChainID = 2
	param.Address = acct.Address
	param.Headers = append(param.Headers, header7152786)
	param.Headers = append(param.Headers, header7152787)
	param.Headers = append(param.Headers, header7152789)
	sink := common.NewZeroCopySink(nil)
	param.Serialization(sink)

	native = NewNative(sink.Bytes(), nil, native.GetCacheDB())
	err := ethHandler.SyncBlockHeader(native)
	assert.Equal(t, SYNCBLOCK_ORPHAN, typeOfError(err))
	height := getLatestHeight(native)
	assert.Equal(t, uint64(7152787), height)
}

/*
the difficulty of header 7152788 is wrong
*/
func TestSyncBlockHeader_DifficultyWrong(t *testing.T) {
	ethHandler := NewETHHandler()
	var native *native.NativeService
	{
		header7152785, _ := hex.DecodeString("7b22706172656e7448617368223a22307837633137326261396464383763363163616531643162613031626239356366353830366465313835653966613030313065343137656666353135356335366537222c2273686133556e636c6573223a22307831646363346465386465633735643761616238356235363762366363643431616433313234353162393438613734313366306131343266643430643439333437222c226d696e6572223a22307836333562343736346431393339646661636433613830313437323631353961626332373762656363222c227374617465526f6f74223a22307838366233376564663162343537663566393664333162303963343865306133653863333738616138666531386331623431343331363331623037643430343931222c227472616e73616374696f6e73526f6f74223a22307835626663393365366461343263383138343134393766366538303762373731366161613064313432396132313130653661323737373566336631373538343536222c227265636569707473526f6f74223a22307839303533306462303165613761636466306430613334323536343934343463333633303365383231363464616334303532303464653839633837356532636464222c226c6f6773426c6f6f6d223a2230786230303031383430303030303030343230303030303134343030303030303038303030303030303038303030303030303030383030393030303030343030303030303030303030313030303030303030363031303832303030303031303030303030303030303030303830303031303830303830303830343031323030303130303038303038303030303031303030303030303030303038343030303230303038303031303030303030303030303030303030303430303030303030303031303430303230303030303230383230303030303030303030343030303030383030303030303030303030303030303030323030303038303130303130383030343130303030303830303030303030303038303432303030303030323030303030333030303031303032303030303030303030323030303031303031303030303030303230303032303030303030303030303030303130303030313030303030303030303030303030323030303030303030303038306130303030313033303030303030303030303832303030303030313430303830323030303030303031303030303030303034303030303030303430303031303030303030303630303230313030303130303030343230303034303230303030303032303138303830303030303030303034303030303035383030303030323030303030303032323030303830222c22646966666963756c7479223a2230783130326535363063222c226e756d626572223a223078366432343931222c226761734c696d6974223a223078376131323164222c2267617355736564223a223078363330633536222c2274696d657374616d70223a2230783565323431626434222c22657874726144617461223a2230786465383330323035306438663530363137323639373437393264343537343638363537323635373536643836333132653333333832653330383236633639222c226d697848617368223a22307837386637386462346565353132336139386530363361663339646663663965633464333863373739383434376462323235386665383232363437613133643465222c226e6f6e6365223a22307832376132383132336631393365663439222c2268617368223a22307839306131626339633566326532396365316636303562323366336661366262303634666462653535336138313632626664666133623962623864303630306537227d")
		param := new(scom.SyncGenesisHeaderParam)
		param.ChainID = 2
		param.GenesisHeader = header7152785
		sink := common.NewZeroCopySink(nil)
		param.Serialization(sink)

		tx := &types.Transaction{
			SignedAddr: []common.Address{acct.Address},
		}

		native = NewNative(sink.Bytes(), tx, nil)
		err := ethHandler.SyncGenesisHeader(native)
		assert.Equal(t, SUCCESS, typeOfError(err))
		height := getLatestHeight(native)
		assert.Equal(t, uint64(7152785), height)
		header7152785Hash := getHeaderHashByHeight(native, 7152785)
		assert.Equal(t, true, bytes.Equal(ethcommon.HexToHash("90a1bc9c5f2e29ce1f605b23f3fa6bb064fdbe553a8162bfdfa3b9bb8d0600e7").Bytes(), header7152785Hash.Bytes()))
		header7152785_formstore := getHeaderByHash(native, header7152785Hash)
		assert.Equal(t, true, bytes.Equal(header7152785_formstore, header7152785))
	}
	// the difficulty of header 7152788 is wrong
	header7152786, _ := hex.DecodeString("7b22706172656e7448617368223a22307839306131626339633566326532396365316636303562323366336661366262303634666462653535336138313632626664666133623962623864303630306537222c2273686133556e636c6573223a22307831646363346465386465633735643761616238356235363762366363643431616433313234353162393438613734313366306131343266643430643439333437222c226d696e6572223a22307836333562343736346431393339646661636433613830313437323631353961626332373762656363222c227374617465526f6f74223a22307834633339303734363531623030313530643364376231373238616339393233303832303333323833393236316665353163313137643733373661326531323833222c227472616e73616374696f6e73526f6f74223a22307836396434636538326365373862643933343835393464636530656562323836343765623339306665383439373031363666376234383833393264306539356563222c227265636569707473526f6f74223a22307831356166306136386230393636333735353164326433623765396665643762336334653738636632393938613334383730393030386336346233646162323631222c226c6f6773426c6f6f6d223ac22646966666963756c7479223a2230783130326335303432222c226e756d626572223a223078366432343932222c226761734c696d6974223a223078376131323164222c2267617355736564223a223078343531636537222c2274696d657374616d70223a2230783565323431626565222c22657874726144617461223a2230786465383330323035306438663530363137323639373437393264343537343638363537323635373536643836333132653333333832653330383236633639222c226d697848617368223a22307837343738626565613836353939623232643066336438383330376665373263666636343039393237383966313063643838653037303362346531643961613063222c226e6f6e6365223a22307832376132383132336534353066623130222c2268617368223a22307862306662646565653732303537643031326536616563633864663134306630333330653131303563663662303465363831663065313963326361383333653365227d")
	header7152787, _ := hex.DecodeString("7b22706172656e7448617368223a22307862306662646565653732303537643031326536616563633864663134306630333330653131303563663662303465363831663065313963326361383333653365222c2273686133556e636c6573223a22307865393661396264646663666531303636346335363464663135356130353565343766303332353863353261656633333632343231336462346261313036373137222c226d696e6572223a22307836333562343736346431393339646661636433613830313437323631353961626332373762656363222c227374617465526f6f74223a22307834663232303139623633336634383236653335373761663733643263373634626464613965353536336163633539316465663434613730366535353530343136222c227472616e73616374696f6e73526f6f74223a22307830313636623137313666323763356339346239653763393831373464643137333433353037616139383466313639653766646435306561386236303461313364222c227265636569707473526f6f74223a22307833323233626536323336316331343732646562303439656333323935633463653033396435663731613364373230363263613634306234333834336362303130222c226c6f6773426c6f6f6d223ac22646966666963756c7479223a2230783130326535356363222c226e756d626572223a223078366432343933222c226761734c696d6974223a223078376131323164222c2267617355736564223a2230783430633539222c2274696d657374616d70223a2230783565323431626636222c22657874726144617461223a2230786465383330323035306438663530363137323639373437393264343537343638363537323635373536643836333132653333333832653330383236633639222c226d697848617368223a22307832313130396338656635306362386661326265393839353561613730656436623666386131326538343461303639316362373035616437366339373735623333222c226e6f6e6365223a22307832376132383132336635613864313233222c2268617368223a22307863653836623834346535363634633733373761306138336333353962326161333734363330376630616139346161636531373738353563396662333665666465227d")
	header7152788, _ := hex.DecodeString("7b22706172656e7448617368223a22307863653836623834346535363634633733373761306138336333353962326161333734363330376630616139346161636531373738353563396662333665666465222c2273686133556e636c6573223a22307831643036333465386263313038313239353439636137393366383761616330373861633731663130643564376136636337396361656136306466346137316333222c226d696e6572223a22307836333562343736346431393339646661636433613830313437323631353961626332373762656363222c227374617465526f6f74223a22307832383138383235626463353233316136363730643464313037393430613737623437626562383830663034376339613064303838623836663430373233326261222c227472616e73616374696f6e73526f6f74223a22307836323139303066326536613532363163306466323339623761383732363239646335373332396333346337636663613735333732303339616539646365376432222c227265636569707473526f6f74223a22307862316632326362656435373565623037643931636233666265616262633338656361626262303432626238396430336336343061366239616464646532623162222c226c6f6773426c6f6f6d223ac22646966666963756c7479223a2230783130326335303033222c226e756d626572223a223078366432343934222c226761734c696d6974223a223078376131323164222c2267617355736564223a223078373935333737222c2274696d657374616d70223a2230783565323431633136222c22657874726144617461223a2230786465383330323035306438663530363137323639373437393264343537343638363537323635373536643836333132653333333832653330383236633639222c226d697848617368223a22307866613436643631383965396366633235306135323133613039613362643764363261353465323730653261306334343037623237393631623734333161643461222c226e6f6e6365223a22307832376132383132336536626230626136222c2268617368223a22307832343464643936626130336433386165633531623731366161353739353562383139303137613861333263336439393031323762363264386435313962623366227d")
	header7152789, _ := hex.DecodeString("7b22706172656e7448617368223a22307832363332333433326233346637386239396436613138663731383266633561393330313435623666616332306561363661343761653537366163636564373436222c2273686133556e636c6573223a22307839643664313430656132383865336162646638663237373934373531653339663565303537626531636331316332313131366534623136396238303439643630222c226d696e6572223a22307834636366623330333962373864333933383538383135373536346339616435353962616661623934222c227374617465526f6f74223a22307836393662373031343337346635323264663131306434623339643930666435646561303739383631313735333261663330373135376532383238633031363533222c227472616e73616374696f6e73526f6f74223a22307837636632333834613936383466393131326537663163623261653632323061626562613862316334663631333038323661333861393034643536386134633166222c227265636569707473526f6f74223a22307836363834383130643063636462626262633263396264336233643866336631316131306261653464353737353766643032306163393465623733356638336235222c226c6f6773426c6f6f6d223ac22646966666963756c7479223a2230783130326535353863222c226e756d626572223a223078366432343935222c226761734c696d6974223a223078376131323030222c2267617355736564223a223078346265383863222c2274696d657374616d70223a2230783565323431633232222c22657874726144617461223a2230786438383330313039303938343637363537343638383836373666333132653331333332653334383536633639366537353738222c226d697848617368223a22307832646235653236613432336233376665306432353339343864366637393565376133613362323436386337303264373164616666393161303064386136623962222c226e6f6e6365223a22307837353432376133303034663233363663222c2268617368223a22307864386665663036663039653562663432643661663834376232323364323539643930353164633163306164613239646466393237646631303430383031613335227d")

	param := new(scom.SyncBlockHeaderParam)
	param.ChainID = 2
	param.Address = acct.Address
	param.Headers = append(param.Headers, header7152786)
	param.Headers = append(param.Headers, header7152787)
	param.Headers = append(param.Headers, header7152788)
	param.Headers = append(param.Headers, header7152789)
	sink := common.NewZeroCopySink(nil)
	param.Serialization(sink)

	native = NewNative(sink.Bytes(), nil, native.GetCacheDB())
	err := ethHandler.SyncBlockHeader(native)
	assert.Equal(t, DIFFICULTY_ERROR, typeOfError(err))
	height := getLatestHeight(native)
	assert.Equal(t, uint64(7152787), height)

	header7152787Hash := getHeaderHashByHeight(native, 7152787)
	assert.Equal(t, true, bytes.Equal(ethcommon.HexToHash("ce86b844e5664c7377a0a83c359b2aa3746307f0aa94aace177855c9fb36efde").Bytes(), header7152787Hash.Bytes()))
	header7152787_formstore := getHeaderByHash(native, header7152787Hash)
	assert.Equal(t, true, bytes.Equal(header7152787_formstore, header7152787))

	header7152786Hash := getHeaderHashByHeight(native, 7152786)
	assert.Equal(t, true, bytes.Equal(ethcommon.HexToHash("b0fbdeee72057d012e6aecc8df140f0330e1105cf6b04e681f0e19c2ca833e3e").Bytes(), header7152786Hash.Bytes()))
	header7152786_formstore := getHeaderByHash(native, header7152786Hash)
	assert.Equal(t, true, bytes.Equal(header7152786_formstore, header7152786))
}

/*
the nonce of header 7152788 is wrong
*/
func TestSyncBlockHeader_NonceWrong(t *testing.T) {
	ethHandler := NewETHHandler()
	var native *native.NativeService
	{
		header7152785, _ := hex.DecodeString("7b22706172656e7448617368223a22307837633137326261396464383763363163616531643162613031626239356366353830366465313835653966613030313065343137656666353135356335366537222c2273686133556e636c6573223a22307831646363346465386465633735643761616238356235363762366363643431616433313234353162393438613734313366306131343266643430643439333437222c226d696e6572223a22307836333562343736346431393339646661636433613830313437323631353961626332373762656363222c227374617465526f6f74223a22307838366233376564663162343537663566393664333162303963343865306133653863333738616138666531386331623431343331363331623037643430343931222c227472616e73616374696f6e73526f6f74223a22307835626663393365366461343263383138343134393766366538303762373731366161613064313432396132313130653661323737373566336631373538343536222c227265636569707473526f6f74223a22307839303533306462303165613761636466306430613334323536343934343463333633303365383231363464616334303532303464653839633837356532636464222c226c6f6773426c6f6f6d223ac22646966666963756c7479223a2230783130326535363063222c226e756d626572223a223078366432343931222c226761734c696d6974223a223078376131323164222c2267617355736564223a223078363330633536222c2274696d657374616d70223a2230783565323431626434222c22657874726144617461223a2230786465383330323035306438663530363137323639373437393264343537343638363537323635373536643836333132653333333832653330383236633639222c226d697848617368223a22307837386637386462346565353132336139386530363361663339646663663965633464333863373739383434376462323235386665383232363437613133643465222c226e6f6e6365223a22307832376132383132336631393365663439222c2268617368223a22307839306131626339633566326532396365316636303562323366336661366262303634666462653535336138313632626664666133623962623864303630306537227d")
		param := new(scom.SyncGenesisHeaderParam)
		param.ChainID = 2
		param.GenesisHeader = header7152785
		sink := common.NewZeroCopySink(nil)
		param.Serialization(sink)

		tx := &types.Transaction{
			SignedAddr: []common.Address{acct.Address},
		}

		native = NewNative(sink.Bytes(), tx, nil)
		err := ethHandler.SyncGenesisHeader(native)
		assert.Equal(t, SUCCESS, typeOfError(err))
		height := getLatestHeight(native)
		assert.Equal(t, uint64(7152785), height)
		header7152785Hash := getHeaderHashByHeight(native, 7152785)
		assert.Equal(t, true, bytes.Equal(ethcommon.HexToHash("90a1bc9c5f2e29ce1f605b23f3fa6bb064fdbe553a8162bfdfa3b9bb8d0600e7").Bytes(), header7152785Hash.Bytes()))
		header7152785_formstore := getHeaderByHash(native, header7152785Hash)
		assert.Equal(t, true, bytes.Equal(header7152785_formstore, header7152785))
	}
	// the nonce of header 7152788 is wrong
	header7152786, _ := hex.DecodeString("7b22706172656e7448617368223a22307839306131626339633566326532396365316636303562323366336661366262303634666462653535336138313632626664666133623962623864303630306537222c2273686133556e636c6573223a22307831646363346465386465633735643761616238356235363762366363643431616433313234353162393438613734313366306131343266643430643439333437222c226d696e6572223a22307836333562343736346431393339646661636433613830313437323631353961626332373762656363222c227374617465526f6f74223a22307834633339303734363531623030313530643364376231373238616339393233303832303333323833393236316665353163313137643733373661326531323833222c227472616e73616374696f6e73526f6f74223a22307836396434636538326365373862643933343835393464636530656562323836343765623339306665383439373031363666376234383833393264306539356563222c227265636569707473526f6f74223a22307831356166306136386230393636333735353164326433623765396665643762336334653738636632393938613334383730393030386336346233646162323631222c226c6f6773426c6f6f6d223a2230783230303430383138303031303030303031303030303038303030303032383030303030303030303030303131303030303030303034383034383230303230303030303030303030303032303030303030343030383030303032303030303030303030303030303030303030303030303030303030303030303030383230303030303030303230303038303430303030303030303230303038343030303030383430303030303838323230343030303030303230303630303130303030303431303230303230313030303030303030303030303031303034303030303239303130303430303030303030343830303830323030303063303530303530303030383030303030303030303130303032383032323430303030303033303030303030323030303030353230303034303030303030303430303830303030303230303030303039303032303030303030303130303030303031303030303034383430303061303030303030303030303030303030303030313230303030303031303030303132343030303032303030303030303030323038303030383038383839303030303230303830303030313830303030303030303030393030343030383230303030613030303130343038303430303235303030303032383238303030303230323036303030323030313030303030303834303430303030323032303030303030222c22646966666963756c7479223a2230783130326335303432222c226e756d626572223a223078366432343932222c226761734c696d6974223a223078376131323164222c2267617355736564223a223078343531636537222c2274696d657374616d70223a2230783565323431626565222c22657874726144617461223a2230786465383330323035306438663530363137323639373437393264343537343638363537323635373536643836333132653333333832653330383236633639222c226d697848617368223a22307837343738626565613836353939623232643066336438383330376665373263666636343039393237383966313063643838653037303362346531643961613063222c226e6f6e6365223a22307832376132383132336534353066623130222c2268617368223a22307862306662646565653732303537643031326536616563633864663134306630333330653131303563663662303465363831663065313963326361383333653365227d")
	header7152787, _ := hex.DecodeString("7b22706172656e7448617368223a22307862306662646565653732303537643031326536616563633864663134306630333330653131303563663662303465363831663065313963326361383333653365222c2273686133556e636c6573223a22307865393661396264646663666531303636346335363464663135356130353565343766303332353863353261656633333632343231336462346261313036373137222c226d696e6572223a22307836333562343736346431393339646661636433613830313437323631353961626332373762656363222c227374617465526f6f74223a22307834663232303139623633336634383236653335373761663733643263373634626464613965353536336163633539316465663434613730366535353530343136222c227472616e73616374696f6e73526f6f74223a22307830313636623137313666323763356339346239653763393831373464643137333433353037616139383466313639653766646435306561386236303461313364222c227265636569707473526f6f74223a22307833323233626536323336316331343732646562303439656333323935633463653033396435663731613364373230363263613634306234333834336362303130222c226c6f6773426c6f6f6d223ac22646966666963756c7479223a2230783130326535356363222c226e756d626572223a223078366432343933222c226761734c696d6974223a223078376131323164222c2267617355736564223a2230783430633539222c2274696d657374616d70223a2230783565323431626636222c22657874726144617461223a2230786465383330323035306438663530363137323639373437393264343537343638363537323635373536643836333132653333333832653330383236633639222c226d697848617368223a22307832313130396338656635306362386661326265393839353561613730656436623666386131326538343461303639316362373035616437366339373735623333222c226e6f6e6365223a22307832376132383132336635613864313233222c2268617368223a22307863653836623834346535363634633733373761306138336333353962326161333734363330376630616139346161636531373738353563396662333665666465227d")
	header7152788, _ := hex.DecodeString("7b22706172656e7448617368223a22307863653836623834346535363634633733373761306138336333353962326161333734363330376630616139346161636531373738353563396662333665666465222c2273686133556e636c6573223a22307831643036333465386263313038313239353439636137393366383761616330373861633731663130643564376136636337396361656136306466346137316333222c226d696e6572223a22307836333562343736346431393339646661636433613830313437323631353961626332373762656363222c227374617465526f6f74223a22307832383138383235626463353233316136363730643464313037393430613737623437626562383830663034376339613064303838623836663430373233326261222c227472616e73616374696f6e73526f6f74223a22307836323139303066326536613532363163306466323339623761383732363239646335373332396333346337636663613735333732303339616539646365376432222c227265636569707473526f6f74223a22307862316632326362656435373565623037643931636233666265616262633338656361626262303432626238396430336336343061366239616464646532623162222c226c6f6773426c6f6f6d223ac22646966666963756c7479223a2230783130326335303032222c226e756d626572223a223078366432343934222c226761734c696d6974223a223078376131323164222c2267617355736564223a223078373935333737222c2274696d657374616d70223a2230783565323431633136222c22657874726144617461223a2230786465383330323035306438663530363137323639373437393264343537343638363537323635373536643836333132653333333832653330383236633639222c226d697848617368223a22307866613436643631383965396366633235306135323133613039613362643764363261353465323730653261306334343037623237393631623734333161643461222c226e6f6e6365223a22307832386132383132336536626230626136222c2268617368223a22307861386636646130393035366266356264626266663165653339663830373434653561366531313431383465303232373430633431386265353261376364633339227d")
	header7152789, _ := hex.DecodeString("7b22706172656e7448617368223a22307832363332333433326233346637386239396436613138663731383266633561393330313435623666616332306561363661343761653537366163636564373436222c2273686133556e636c6573223a22307839643664313430656132383865336162646638663237373934373531653339663565303537626531636331316332313131366534623136396238303439643630222c226d696e6572223a22307834636366623330333962373864333933383538383135373536346339616435353962616661623934222c227374617465526f6f74223a22307836393662373031343337346635323264663131306434623339643930666435646561303739383631313735333261663330373135376532383238633031363533222c227472616e73616374696f6e73526f6f74223a22307837636632333834613936383466393131326537663163623261653632323061626562613862316334663631333038323661333861393034643536386134633166222c227265636569707473526f6f74223a22307836363834383130643063636462626262633263396264336233643866336631316131306261653464353737353766643032306163393465623733356638336235222c226c6f6773426c6f6f6d223ac22646966666963756c7479223a2230783130326535353863222c226e756d626572223a223078366432343935222c226761734c696d6974223a223078376131323030222c2267617355736564223a223078346265383863222c2274696d657374616d70223a2230783565323431633232222c22657874726144617461223a2230786438383330313039303938343637363537343638383836373666333132653331333332653334383536633639366537353738222c226d697848617368223a22307832646235653236613432336233376665306432353339343864366637393565376133613362323436386337303264373164616666393161303064386136623962222c226e6f6e6365223a22307837353432376133303034663233363663222c2268617368223a22307864386665663036663039653562663432643661663834376232323364323539643930353164633163306164613239646466393237646631303430383031613335227d")

	param := new(scom.SyncBlockHeaderParam)
	param.ChainID = 2
	param.Address = acct.Address
	param.Headers = append(param.Headers, header7152786)
	param.Headers = append(param.Headers, header7152787)
	param.Headers = append(param.Headers, header7152788)
	param.Headers = append(param.Headers, header7152789)
	sink := common.NewZeroCopySink(nil)
	param.Serialization(sink)

	native = NewNative(sink.Bytes(), nil, native.GetCacheDB())
	err := ethHandler.SyncBlockHeader(native)
	assert.Equal(t, NONCE_ERROR, typeOfError(err))
	height := getLatestHeight(native)
	assert.Equal(t, uint64(7152787), height)

	header7152787Hash := getHeaderHashByHeight(native, 7152787)
	assert.Equal(t, true, bytes.Equal(ethcommon.HexToHash("ce86b844e5664c7377a0a83c359b2aa3746307f0aa94aace177855c9fb36efde").Bytes(), header7152787Hash.Bytes()))
	header7152787_formstore := getHeaderByHash(native, header7152787Hash)
	assert.Equal(t, true, bytes.Equal(header7152787_formstore, header7152787))

	header7152786Hash := getHeaderHashByHeight(native, 7152786)
	assert.Equal(t, true, bytes.Equal(ethcommon.HexToHash("b0fbdeee72057d012e6aecc8df140f0330e1105cf6b04e681f0e19c2ca833e3e").Bytes(), header7152786Hash.Bytes()))
	header7152786_formstore := getHeaderByHash(native, header7152786Hash)
	assert.Equal(t, true, bytes.Equal(header7152786_formstore, header7152786))
}

func TestSyncBlockHeaderEpoch(t *testing.T) {
	ethHandler := NewETHHandler()
	var native *native.NativeService
	{
		header7139997, _ := hex.DecodeString("7b22706172656e7448617368223a22307836613539643136313230333337353137313861653665303731656364373763376136343363333964323163346466383636613635626533376535326331393462222c2273686133556e636c6573223a22307831646363346465386465633735643761616238356235363762366363643431616433313234353162393438613734313366306131343266643430643439333437222c226d696e6572223a22307836333562343736346431393339646661636433613830313437323631353961626332373762656363222c227374617465526f6f74223a22307834313631323036303863323761316161626266666337363432373964313233306436346565356635356233616265316433616463393233366431613464643039222c227472616e73616374696f6e73526f6f74223a22307864616537383937373261643633303037616131646566383562666338343535656632353731643761643736313432343131346238323532303633366134623735222c227265636569707473526f6f74223a22307835353966373538323561666237666530383431623234663963366666613334663962373733633936303535616562383936376137363534333935643232383063222c226c6f6773426c6f6f6d223ac22646966666963756c7479223a2230783265373536653036222c226e756d626572223a223078366366323964222c226761734c696d6974223a223078376131323164222c2267617355736564223a2230783131663465222c2274696d657374616d70223a2230783565323134303862222c22657874726144617461223a2230786465383330323035306438663530363137323639373437393264343537343638363537323635373536643836333132653333333832653330383236633639222c226d697848617368223a22307837653231383662343133626564353963333062396233356132366635623837366262353939343366343265633566626130373034663030343365303838616336222c226e6f6e6365223a22307839343964343333326566396130373431222c2268617368223a22307835343731326335333166656637306430323033356439323833376138353831376561323261346264343464653138633532353062353965616630646235356336227d")
		param := new(scom.SyncGenesisHeaderParam)
		param.ChainID = 2
		param.GenesisHeader = header7139997
		sink := common.NewZeroCopySink(nil)
		param.Serialization(sink)

		tx := &types.Transaction{
			SignedAddr: []common.Address{acct.Address},
		}

		native = NewNative(sink.Bytes(), tx, nil)
		err := ethHandler.SyncGenesisHeader(native)
		assert.Equal(t, SUCCESS, typeOfError(err))
		height := getLatestHeight(native)
		assert.Equal(t, uint64(7139997), height)
		header7139997Hash := getHeaderHashByHeight(native, 7139997)
		assert.Equal(t, true, bytes.Equal(ethcommon.HexToHash("54712c531fef70d02035d92837a85817ea22a4bd44de18c5250b59eaf0db55c6").Bytes(), header7139997Hash.Bytes()))
		header7139997_formstore := getHeaderByHash(native, header7139997Hash)
		assert.Equal(t, true, bytes.Equal(header7139997_formstore, header7139997))
	}
	header7139998, _ := hex.DecodeString("7b22706172656e7448617368223a22307835343731326335333166656637306430323033356439323833376138353831376561323261346264343464653138633532353062353965616630646235356336222c2273686133556e636c6573223a22307831646363346465386465633735643761616238356235363762366363643431616433313234353162393438613734313366306131343266643430643439333437222c226d696e6572223a22307836333562343736346431393339646661636433613830313437323631353961626332373762656363222c227374617465526f6f74223a22307835333666636138326330316632363330623935623433636637373936643037353339316136353533393163333966623338363266356266653564333866313733222c227472616e73616374696f6e73526f6f74223a22307837343734376539393238623464373033313737306465353530376431356231336561646335623832313834613331393861383164666639653864343733616636222c227265636569707473526f6f74223a22307864333432656664383664313636323734336533323936386163343262343135326334643434626433333135636566396135306437333636346539656131313335222c226c6f6773426c6f6f6d223ac22646966666963756c7479223a2230783265376233636233222c226e756d626572223a223078366366323965222c226761734c696d6974223a223078376131323164222c2267617355736564223a2230786138663964222c2274696d657374616d70223a2230783565323134303863222c22657874726144617461223a2230786465383330323035306438663530363137323639373437393264343537343638363537323635373536643836333132653333333832653330383236633639222c226d697848617368223a22307839613432643635393934616532623435376133303135356639323936363566623034386664616431383866653730383534363438383765326133633637653731222c226e6f6e6365223a22307839343964343333326632623438396466222c2268617368223a22307836393630656631383966313731346563623937396132653737363137663134663231666564383132613236333665333035646338303261386134643065306463227d")
	header7139999, _ := hex.DecodeString("7b22706172656e7448617368223a22307836393630656631383966313731346563623937396132653737363137663134663231666564383132613236333665333035646338303261386134643065306463222c2273686133556e636c6573223a22307831646363346465386465633735643761616238356235363762366363643431616433313234353162393438613734313366306131343266643430643439333437222c226d696e6572223a22307836333562343736346431393339646661636433613830313437323631353961626332373762656363222c227374617465526f6f74223a22307866396632336333303533376236393664383264306462343838376662356337613964323632656636623165306339653530386336306362353838656233643439222c227472616e73616374696f6e73526f6f74223a22307865313630373836366335646136363363363939666264633535613165363665386563633361383232356530386231386263613961663031336534623464613763222c227265636569707473526f6f74223a22307833353262623635633637383564623535323863656261393335363264663435326564303165353266383235393238306330323130393933643766616132366362222c226c6f6773426c6f6f6d223ac22646966666963756c7479223a2230783265383130633161222c226e756d626572223a223078366366323966222c226761734c696d6974223a223078376131323164222c2267617355736564223a2230783563613334222c2274696d657374616d70223a2230783565323134303866222c22657874726144617461223a2230786465383330323035306438663530363137323639373437393264343537343638363537323635373536643836333132653333333832653330383236633639222c226d697848617368223a22307832343336613339653033393134346132613864323365376165333938366233306364386633656539643332353463323032633035323137366130303934373461222c226e6f6e6365223a22307839343964343233326635303439333931222c2268617368223a22307862363530306337626264326266393133303137386264626634386537616637613234316461346333663161323434386435653761646663353265376630303231227d")
	header7140000, _ := hex.DecodeString("7b22706172656e7448617368223a22307862363530306337626264326266393133303137386264626634386537616637613234316461346333663161323434386435653761646663353265376630303231222c2273686133556e636c6573223a22307831646363346465386465633735643761616238356235363762366363643431616433313234353162393438613734313366306131343266643430643439333437222c226d696e6572223a22307836333562343736346431393339646661636433613830313437323631353961626332373762656363222c227374617465526f6f74223a22307863613261333434313433376466343765636137343436633131316362626232363436396239383139663131346334333361613265333237633433623437633539222c227472616e73616374696f6e73526f6f74223a22307839373865383930306262323962633230356162353834383337616332383764623235333466633131623838393136313031386562656164663632396632363364222c227265636569707473526f6f74223a22307863653734383430326361633361343531396462336533393438303736366233363533376234646631383036663965353335663737666561336639336438343862222c226c6f6773426c6f6f6d223ac22646966666963756c7479223a2230783265383130633161222c226e756d626572223a223078366366326130222c226761734c696d6974223a223078376131323164222c2267617355736564223a2230783461626535222c2274696d657374616d70223a2230783565323134303963222c22657874726144617461223a2230786465383330323035306438663530363137323639373437393264343537343638363537323635373536643836333132653333333832653330383236633639222c226d697848617368223a22307836353364623638346331643538656265646465643938353531373664376264613766383466356639363133326436653261303166383464356330353635613432222c226e6f6e6365223a22307839343964343333326638656661666162222c2268617368223a22307864396634653934613035326531393737363031623037663834386130396462623739383433636534353630623630393131613831666563376466656539306430227d")
	header7140001, _ := hex.DecodeString("7b22706172656e7448617368223a22307864396634653934613035326531393737363031623037663834386130396462623739383433636534353630623630393131613831666563376466656539306430222c2273686133556e636c6573223a22307831646363346465386465633735643761616238356235363762366363643431616433313234353162393438613734313366306131343266643430643439333437222c226d696e6572223a22307834636366623330333962373864333933383538383135373536346339616435353962616661623934222c227374617465526f6f74223a22307834383062326439653261663130646536366134336666343934613338616466346564343036343137343966343137316565613233653163623937356137626338222c227472616e73616374696f6e73526f6f74223a22307837636537366233376465346435396438313965323663316231353233653461353232313030303561623866633436323330333332396533316538393466623566222c227265636569707473526f6f74223a22307839346130353230626531343165373266613563616635646463326234633131343861313866336330363561376366616536313132373130343834373164643235222c226c6f6773426c6f6f6d223ac22646966666963756c7479223a2230783265376233626639222c226e756d626572223a223078366366326131222c226761734c696d6974223a223078376131323030222c2267617355736564223a223078323437636232222c2274696d657374616d70223a2230783565323134306232222c22657874726144617461223a2230786438383330313039303938343637363537343638383836373666333132653331333332653334383536633639366537353738222c226d697848617368223a22307864366334653865653039373566643365633939653031383163393464643838636338306338393837346466306437653635383065626166386235323937386261222c226e6f6e6365223a22307863306132653961343031663738323166222c2268617368223a22307834386164303838323364343666613564353464343265333466323833363666333164633865366365316166623933346635323032393938396164303230356131227d")

	param := new(scom.SyncBlockHeaderParam)
	param.ChainID = 2
	param.Address = acct.Address
	param.Headers = append(param.Headers, header7139998)
	param.Headers = append(param.Headers, header7139999)
	param.Headers = append(param.Headers, header7140000)
	param.Headers = append(param.Headers, header7140001)
	sink := common.NewZeroCopySink(nil)
	param.Serialization(sink)

	native = NewNative(sink.Bytes(), nil, native.GetCacheDB())
	err := ethHandler.SyncBlockHeader(native)
	assert.Equal(t, SUCCESS, typeOfError(err))
	height := getLatestHeight(native)
	assert.Equal(t, uint64(7140001), height)

	header7140001Hash := getHeaderHashByHeight(native, 7140001)
	assert.Equal(t, true, bytes.Equal(ethcommon.HexToHash("48ad08823d46fa5d54d42e34f28366f31dc8e6ce1afb934f52029989ad0205a1").Bytes(), header7140001Hash.Bytes()))
	header7140001_formstore := getHeaderByHash(native, header7140001Hash)
	assert.Equal(t, true, bytes.Equal(header7140001_formstore, header7140001))

	header7140000Hash := getHeaderHashByHeight(native, 7140000)
	assert.Equal(t, true, bytes.Equal(ethcommon.HexToHash("d9f4e94a052e1977601b07f848a09dbb79843ce4560b60911a81fec7dfee90d0").Bytes(), header7140000Hash.Bytes()))
	header7140000_formstore := getHeaderByHash(native, header7140000Hash)
	assert.Equal(t, true, bytes.Equal(header7140000_formstore, header7140000))

	header7139999Hash := getHeaderHashByHeight(native, 7139999)
	assert.Equal(t, true, bytes.Equal(ethcommon.HexToHash("b6500c7bbd2bf9130178bdbf48e7af7a241da4c3f1a2448d5e7adfc52e7f0021").Bytes(), header7139999Hash.Bytes()))
	header7139999_formstore := getHeaderByHash(native, header7139999Hash)
	assert.Equal(t, true, bytes.Equal(header7139999_formstore, header7139999))

	header7139998Hash := getHeaderHashByHeight(native, 7139998)
	assert.Equal(t, true, bytes.Equal(ethcommon.HexToHash("6960ef189f1714ecb979a2e77617f14f21fed812a2636e305dc802a8a4d0e0dc").Bytes(), header7139998Hash.Bytes()))
	header7139998_formstore := getHeaderByHash(native, header7139998Hash)
	assert.Equal(t, true, bytes.Equal(header7139998_formstore, header7139998))
}

func TestSyncBlockHeaderForked(t *testing.T) {
	ethHandler := NewETHHandler()
	var native *native.NativeService
	{
		header7152785, _ := hex.DecodeString("7b22706172656e7448617368223a22307837633137326261396464383763363163616531643162613031626239356366353830366465313835653966613030313065343137656666353135356335366537222c2273686133556e636c6573223a22307831646363346465386465633735643761616238356235363762366363643431616433313234353162393438613734313366306131343266643430643439333437222c226d696e6572223a22307836333562343736346431393339646661636433613830313437323631353961626332373762656363222c227374617465526f6f74223a22307838366233376564663162343537663566393664333162303963343865306133653863333738616138666531386331623431343331363331623037643430343931222c227472616e73616374696f6e73526f6f74223a22307835626663393365366461343263383138343134393766366538303762373731366161613064313432396132313130653661323737373566336631373538343536222c227265636569707473526f6f74223a22307839303533306462303165613761636466306430613334323536343934343463333633303365383231363464616334303532303464653839633837356532636464222c226c6f6773426c6f6f6d223a2230786230303031383430303030303030343230303030303134343030303030303038303030303030303038303030303030303030383030393030303030343030303030303030303030313030303030303030363031303832303030303031303030303030303030303030303830303031303830303830303830343031323030303130303038303038303030303031303030303030303030303038343030303230303038303031303030303030303030303030303030303430303030303030303031303430303230303030303230383230303030303030303030343030303030383030303030303030303030303030303030323030303038303130303130383030343130303030303830303030303030303038303432303030303030323030303030333030303031303032303030303030303030323030303031303031303030303030303230303032303030303030303030303030303130303030313030303030303030303030303030323030303030303030303038306130303030313033303030303030303030303832303030303030313430303830323030303030303031303030303030303034303030303030303430303031303030303030303630303230313030303130303030343230303034303230303030303032303138303830303030303030303034303030303035383030303030323030303030303032323030303830222c22646966666963756c7479223a2230783130326535363063222c226e756d626572223a223078366432343931222c226761734c696d6974223a223078376131323164222c2267617355736564223a223078363330633536222c2274696d657374616d70223a2230783565323431626434222c22657874726144617461223a2230786465383330323035306438663530363137323639373437393264343537343638363537323635373536643836333132653333333832653330383236633639222c226d697848617368223a22307837386637386462346565353132336139386530363361663339646663663965633464333863373739383434376462323235386665383232363437613133643465222c226e6f6e6365223a22307832376132383132336631393365663439222c2268617368223a22307839306131626339633566326532396365316636303562323366336661366262303634666462653535336138313632626664666133623962623864303630306537227d")
		param := new(scom.SyncGenesisHeaderParam)
		param.ChainID = 2
		param.GenesisHeader = header7152785
		sink := common.NewZeroCopySink(nil)
		param.Serialization(sink)

		tx := &types.Transaction{
			SignedAddr: []common.Address{acct.Address},
		}

		native = NewNative(sink.Bytes(), tx, nil)
		err := ethHandler.SyncGenesisHeader(native)
		assert.Equal(t, SUCCESS, typeOfError(err))
		height := getLatestHeight(native)
		assert.Equal(t, uint64(7152785), height)
	}
	{
		header7152786, _ := hex.DecodeString("7b22706172656e7448617368223a22307839306131626339633566326532396365316636303562323366336661366262303634666462653535336138313632626664666133623962623864303630306537222c2273686133556e636c6573223a22307831646363346465386465633735643761616238356235363762366363643431616433313234353162393438613734313366306131343266643430643439333437222c226d696e6572223a22307836333562343736346431393339646661636433613830313437323631353961626332373762656363222c227374617465526f6f74223a22307834633339303734363531623030313530643364376231373238616339393233303832303333323833393236316665353163313137643733373661326531323833222c227472616e73616374696f6e73526f6f74223a22307836396434636538326365373862643933343835393464636530656562323836343765623339306665383439373031363666376234383833393264306539356563222c227265636569707473526f6f74223a22307831356166306136386230393636333735353164326433623765396665643762336334653738636632393938613334383730393030386336346233646162323631222c226c6f6773426c6f6f6d223ac22646966666963756c7479223a2230783130326335303432222c226e756d626572223a223078366432343932222c226761734c696d6974223a223078376131323164222c2267617355736564223a223078343531636537222c2274696d657374616d70223a2230783565323431626565222c22657874726144617461223a2230786465383330323035306438663530363137323639373437393264343537343638363537323635373536643836333132653333333832653330383236633639222c226d697848617368223a22307837343738626565613836353939623232643066336438383330376665373263666636343039393237383966313063643838653037303362346531643961613063222c226e6f6e6365223a22307832376132383132336534353066623130222c2268617368223a22307862306662646565653732303537643031326536616563633864663134306630333330653131303563663662303465363831663065313963326361383333653365227d")
		header7152787, _ := hex.DecodeString("7b22706172656e7448617368223a22307862306662646565653732303537643031326536616563633864663134306630333330653131303563663662303465363831663065313963326361383333653365222c2273686133556e636c6573223a22307865393661396264646663666531303636346335363464663135356130353565343766303332353863353261656633333632343231336462346261313036373137222c226d696e6572223a22307836333562343736346431393339646661636433613830313437323631353961626332373762656363222c227374617465526f6f74223a22307834663232303139623633336634383236653335373761663733643263373634626464613965353536336163633539316465663434613730366535353530343136222c227472616e73616374696f6e73526f6f74223a22307830313636623137313666323763356339346239653763393831373464643137333433353037616139383466313639653766646435306561386236303461313364222c227265636569707473526f6f74223a22307833323233626536323336316331343732646562303439656333323935633463653033396435663731613364373230363263613634306234333834336362303130222c226c6f6773426c6f6f6d223a2230783030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030222c22646966666963756c7479223a2230783130326535356363222c226e756d626572223a223078366432343933222c226761734c696d6974223a223078376131323164222c2267617355736564223a2230783430633539222c2274696d657374616d70223a2230783565323431626636222c22657874726144617461223a2230786465383330323035306438663530363137323639373437393264343537343638363537323635373536643836333132653333333832653330383236633639222c226d697848617368223a22307832313130396338656635306362386661326265393839353561613730656436623666386131326538343461303639316362373035616437366339373735623333222c226e6f6e6365223a22307832376132383132336635613864313233222c2268617368223a22307863653836623834346535363634633733373761306138336333353962326161333734363330376630616139346161636531373738353563396662333665666465227d")
		header7152788, _ := hex.DecodeString("7b22706172656e7448617368223a22307863653836623834346535363634633733373761306138336333353962326161333734363330376630616139346161636531373738353563396662333665666465222c2273686133556e636c6573223a22307831643036333465386263313038313239353439636137393366383761616330373861633731663130643564376136636337396361656136306466346137316333222c226d696e6572223a22307836333562343736346431393339646661636433613830313437323631353961626332373762656363222c227374617465526f6f74223a22307832383138383235626463353233316136363730643464313037393430613737623437626562383830663034376339613064303838623836663430373233326261222c227472616e73616374696f6e73526f6f74223a22307836323139303066326536613532363163306466323339623761383732363239646335373332396333346337636663613735333732303339616539646365376432222c227265636569707473526f6f74223a22307862316632326362656435373565623037643931636233666265616262633338656361626262303432626238396430336336343061366239616464646532623162222c226c6f6773426c6f6f6d223ac22646966666963756c7479223a2230783130326335303032222c226e756d626572223a223078366432343934222c226761734c696d6974223a223078376131323164222c2267617355736564223a223078373935333737222c2274696d657374616d70223a2230783565323431633136222c22657874726144617461223a2230786465383330323035306438663530363137323639373437393264343537343638363537323635373536643836333132653333333832653330383236633639222c226d697848617368223a22307835303865303533613833386332333064323462633761656331633161333638663834306564363066333038633135366163303363626239336364666132383836222c226e6f6e6365223a22307832376132383132336536623961373337222c2268617368223a22307861313730663830346665336436643132633838396532616136363339323737383333313530656332326237333730396663656165323865353364633932336462227d")
		param := new(scom.SyncBlockHeaderParam)
		param.ChainID = 2
		param.Address = acct.Address
		param.Headers = append(param.Headers, header7152786)
		param.Headers = append(param.Headers, header7152787)
		param.Headers = append(param.Headers, header7152788)
		sink := common.NewZeroCopySink(nil)
		param.Serialization(sink)

		native = NewNative(sink.Bytes(), nil, native.GetCacheDB())
		err := ethHandler.SyncBlockHeader(native)
		assert.Equal(t, SUCCESS, typeOfError(err))
		height := getLatestHeight(native)
		assert.Equal(t, uint64(7152788), height)
	}
	{
		header7152788, _ := hex.DecodeString("7b22706172656e7448617368223a22307863653836623834346535363634633733373761306138336333353962326161333734363330376630616139346161636531373738353563396662333665666465222c2273686133556e636c6573223a22307831643036333465386263313038313239353439636137393366383761616330373861633731663130643564376136636337396361656136306466346137316333222c226d696e6572223a22307836333562343736346431393339646661636433613830313437323631353961626332373762656363222c227374617465526f6f74223a22307832383138383235626463353233316136363730643464313037393430613737623437626562383830663034376339613064303838623836663430373233326261222c227472616e73616374696f6e73526f6f74223a22307836323139303066326536613532363163306466323339623761383732363239646335373332396333346337636663613735333732303339616539646365376432222c227265636569707473526f6f74223a22307862316632326362656435373565623037643931636233666265616262633338656361626262303432626238396430336336343061366239616464646532623162222c226c6f6773426c6f6f6d223ac22646966666963756c7479223a2230783130326335303032222c226e756d626572223a223078366432343934222c226761734c696d6974223a223078376131323164222c2267617355736564223a223078373935333737222c2274696d657374616d70223a2230783565323431633136222c22657874726144617461223a2230786465383330323035306438663530363137323639373437393264343537343638363537323635373536643836333132653333333832653330383236633639222c226d697848617368223a22307866613436643631383965396366633235306135323133613039613362643764363261353465323730653261306334343037623237393631623734333161643461222c226e6f6e6365223a22307832376132383132336536626230626136222c2268617368223a22307832363332333433326233346637386239396436613138663731383266633561393330313435623666616332306561363661343761653537366163636564373436227d")
		header7152789, _ := hex.DecodeString("7b22706172656e7448617368223a22307832363332333433326233346637386239396436613138663731383266633561393330313435623666616332306561363661343761653537366163636564373436222c2273686133556e636c6573223a22307839643664313430656132383865336162646638663237373934373531653339663565303537626531636331316332313131366534623136396238303439643630222c226d696e6572223a22307834636366623330333962373864333933383538383135373536346339616435353962616661623934222c227374617465526f6f74223a22307836393662373031343337346635323264663131306434623339643930666435646561303739383631313735333261663330373135376532383238633031363533222c227472616e73616374696f6e73526f6f74223a22307837636632333834613936383466393131326537663163623261653632323061626562613862316334663631333038323661333861393034643536386134633166222c227265636569707473526f6f74223a22307836363834383130643063636462626262633263396264336233643866336631316131306261653464353737353766643032306163393465623733356638336235222c226c6f6773426c6f6f6d223ac22646966666963756c7479223a2230783130326535353863222c226e756d626572223a223078366432343935222c226761734c696d6974223a223078376131323030222c2267617355736564223a223078346265383863222c2274696d657374616d70223a2230783565323431633232222c22657874726144617461223a2230786438383330313039303938343637363537343638383836373666333132653331333332653334383536633639366537353738222c226d697848617368223a22307832646235653236613432336233376665306432353339343864366637393565376133613362323436386337303264373164616666393161303064386136623962222c226e6f6e6365223a22307837353432376133303034663233363663222c2268617368223a22307864386665663036663039653562663432643661663834376232323364323539643930353164633163306164613239646466393237646631303430383031613335227d")

		param := new(scom.SyncBlockHeaderParam)
		param.ChainID = 2
		param.Address = acct.Address
		param.Headers = append(param.Headers, header7152788)
		param.Headers = append(param.Headers, header7152789)
		sink := common.NewZeroCopySink(nil)
		param.Serialization(sink)

		native = NewNative(sink.Bytes(), nil, native.GetCacheDB())
		err := ethHandler.SyncBlockHeader(native)
		assert.Equal(t, SUCCESS, typeOfError(err))
		height := getLatestHeight(native)
		assert.Equal(t, uint64(7152789), height)
	}
}

func TestSyncBlockHeaderForked2(t *testing.T) {
	ethHandler := NewETHHandler()
	var native *native.NativeService
	{
		header7155387, _ := hex.DecodeString("7b22706172656e7448617368223a22307864626134393239393063346433303063383763383538336332303137663031666631326135313334633863326631636561353461613064666430303438343139222c2273686133556e636c6573223a22307831646363346465386465633735643761616238356235363762366363643431616433313234353162393438613734313366306131343266643430643439333437222c226d696e6572223a22307836333562343736346431393339646661636433613830313437323631353961626332373762656363222c227374617465526f6f74223a22307836663562363063353865336161353631326334306561353039646361643235333635366335323236383865396632353666383436643165626133313563653531222c227472616e73616374696f6e73526f6f74223a22307832623533626436373930313436383537396630333963303534653865353661646361663964366165306561613731356336333838646238366161333862313138222c227265636569707473526f6f74223a22307839633533653962323662633061663633656338656639363565633438306165633633323534633938653464343564353636646636353866383432386333323365222c226c6f6773426c6f6f6d223ac22646966666963756c7479223a22307864346464316338222c226e756d626572223a223078366432656262222c226761734c696d6974223a223078376131323164222c2267617355736564223a2230783535366137222c2274696d657374616d70223a2230783565323462326133222c22657874726144617461223a2230786465383330323035306438663530363137323639373437393264343537343638363537323635373536643836333132653333333832653330383236633639222c226d697848617368223a22307838353038363338626632356436313636373036656261333061363735633131656239663936656438663934613534333866353432363333623133393662643630222c226e6f6e6365223a22307832376132383132336535363562653138222c2268617368223a22307837346234333136363431646566336436306665353462396133666135326231346337316230613630333463333661343033353132363031626630366231313337227d")
		param := new(scom.SyncGenesisHeaderParam)
		param.ChainID = 2
		param.GenesisHeader = header7155387
		sink := common.NewZeroCopySink(nil)
		param.Serialization(sink)

		tx := &types.Transaction{
			SignedAddr: []common.Address{acct.Address},
		}

		native = NewNative(sink.Bytes(), tx, nil)
		err := ethHandler.SyncGenesisHeader(native)
		assert.Equal(t, SUCCESS, typeOfError(err))
		height := getLatestHeight(native)
		assert.Equal(t, uint64(7155387), height)
	}
	{
		header7155388, _ := hex.DecodeString("7b22706172656e7448617368223a22307837346234333136363431646566336436306665353462396133666135326231346337316230613630333463333661343033353132363031626630366231313337222c2273686133556e636c6573223a22307831646363346465386465633735643761616238356235363762366363643431616433313234353162393438613734313366306131343266643430643439333437222c226d696e6572223a22307836333562343736346431393339646661636433613830313437323631353961626332373762656363222c227374617465526f6f74223a22307864306362316337383739653230313435343565316433393364383565353430326138623436373331323165303530323330623562666632613632643661383635222c227472616e73616374696f6e73526f6f74223a22307832386262316163376632326563643933656232636633373938376466613037633364663437313762663561323638646436626132353462346533303330616463222c227265636569707473526f6f74223a22307863656264383437656331306561633363613539613534643233363236383733356361643531656231386335313130333732323262333431306330383633373036222c226c6f6773426c6f6f6d223ac22646966666963756c7479223a22307864346464316338222c226e756d626572223a223078366432656263222c226761734c696d6974223a223078376131323164222c2267617355736564223a2230783132643938222c2274696d657374616d70223a2230783565323462326163222c22657874726144617461223a2230786465383330323035306438663530363137323639373437393264343537343638363537323635373536643836333132653333333832653330383236633639222c226d697848617368223a22307865653736303035373230656132393534663831653464376561636364336336643762616663653965356538646165346237626135633531633233343931613763222c226e6f6e6365223a22307832376132383132336531363836363633222c2268617368223a22307866633934643864303363333131363531383732366464336138613134383638366434646535653332336266313132386233663730333137626564663535623134227d")
		header7155389, _ := hex.DecodeString("7b22706172656e7448617368223a22307866633934643864303363333131363531383732366464336138613134383638366434646535653332336266313132386233663730333137626564663535623134222c2273686133556e636c6573223a22307831646363346465386465633735643761616238356235363762366363643431616433313234353162393438613734313366306131343266643430643439333437222c226d696e6572223a22307836333562343736346431393339646661636433613830313437323631353961626332373762656363222c227374617465526f6f74223a22307831626336356138356534303766336538623236643862343438653738366361613732393737633566663964353137336161316438323662336633643261646536222c227472616e73616374696f6e73526f6f74223a22307866656231663166666431306531393062373065663766313137663139653239663066323234353633626265666238383537633663303239326331383839366430222c227265636569707473526f6f74223a22307863353338643336656431616366366332383138373131306132646533653564663730376436643338393832663433366562306462376136323366396463326364222c226c6f6773426c6f6f6d223ac22646966666963756c7479223a22307864346637623832222c226e756d626572223a223078366432656264222c226761734c696d6974223a223078376131323164222c2267617355736564223a2230783333343530222c2274696d657374616d70223a2230783565323462326166222c22657874726144617461223a2230786465383330323035306438663530363137323639373437393264343537343638363537323635373536643836333132653333333832653330383236633639222c226d697848617368223a22307832643439313738366166383636636466343133623265623066656133393732313338346663653037363332663364663936356361316166333966396166393632222c226e6f6e6365223a22307832376132383132336536353139633562222c2268617368223a22307836343162356462396663326562326535356634393237373666663232333531316237346163626661393263396237633334303663643565613862643366636135227d")
		header7155390, _ := hex.DecodeString("7b22706172656e7448617368223a22307836343162356462396663326562326535356634393237373666663232333531316237346163626661393263396237633334303663643565613862643366636135222c2273686133556e636c6573223a22307831646363346465386465633735643761616238356235363762366363643431616433313234353162393438613734313366306131343266643430643439333437222c226d696e6572223a22307834636366623330333962373864333933383538383135373536346339616435353962616661623934222c227374617465526f6f74223a22307834646635303033623134356436343134623937333536336165316132653531366564316437353466326662353532626332663062346562343663323662376332222c227472616e73616374696f6e73526f6f74223a22307838666363663435393237383739613131646235623062356136346266343039303536636461343435356339306265393237663366633734623033346633656531222c227265636569707473526f6f74223a22307865353130343637656361306164363963633731336331353137633931393131313062393636356633613036633134373032356533303532666265376661316130222c226c6f6773426c6f6f6d223a2230783030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303430303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030343030303030303030303230303030303030303030303030303030303030303030303030303031303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303230303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303031303030303030303030222c22646966666963756c7479223a22307864346637623832222c226e756d626572223a223078366432656265222c226761734c696d6974223a223078376131323030222c2267617355736564223a2230783464633230222c2274696d657374616d70223a2230783565323462326262222c22657874726144617461223a2230786438383330313039303938343637363537343638383836373666333132653331333332653334383536633639366537353738222c226d697848617368223a22307862363032343236393838643030303735386131396335316263326137326238366530306634653939343366376663613737623363333034666635373631306664222c226e6f6e6365223a22307834643563653034303038353363346634222c2268617368223a22307836386638656332376464303432396266366438353961663232383433366137373063386336656236393166346261306337633738303834613562653435366265227d")
		param := new(scom.SyncBlockHeaderParam)
		param.ChainID = 2
		param.Address = acct.Address
		param.Headers = append(param.Headers, header7155388)
		param.Headers = append(param.Headers, header7155389)
		param.Headers = append(param.Headers, header7155390)
		sink := common.NewZeroCopySink(nil)
		param.Serialization(sink)

		native = NewNative(sink.Bytes(), nil, native.GetCacheDB())
		err := ethHandler.SyncBlockHeader(native)
		assert.Equal(t, SUCCESS, typeOfError(err))
		height := getLatestHeight(native)
		assert.Equal(t, uint64(7155390), height)
	}
	{
		header7155388, _ := hex.DecodeString("7b22706172656e7448617368223a22307837346234333136363431646566336436306665353462396133666135326231346337316230613630333463333661343033353132363031626630366231313337222c2273686133556e636c6573223a22307831646363346465386465633735643761616238356235363762366363643431616433313234353162393438613734313366306131343266643430643439333437222c226d696e6572223a22307836333562343736346431393339646661636433613830313437323631353961626332373762656363222c227374617465526f6f74223a22307864306362316337383739653230313435343565316433393364383565353430326138623436373331323165303530323330623562666632613632643661383635222c227472616e73616374696f6e73526f6f74223a22307832386262316163376632326563643933656232636633373938376466613037633364663437313762663561323638646436626132353462346533303330616463222c227265636569707473526f6f74223a22307863656264383437656331306561633363613539613534643233363236383733356361643531656231386335313130333732323262333431306330383633373036222c226c6f6773426c6f6f6d223ac22646966666963756c7479223a22307864346464316338222c226e756d626572223a223078366432656263222c226761734c696d6974223a223078376131323164222c2267617355736564223a2230783132643938222c2274696d657374616d70223a2230783565323462326163222c22657874726144617461223a2230786465383330323035306438663530363137323639373437393264343537343638363537323635373536643836333132653333333832653330383236633639222c226d697848617368223a22307865653736303035373230656132393534663831653464376561636364336336643762616663653965356538646165346237626135633531633233343931613763222c226e6f6e6365223a22307832376132383132336531363836363633222c2268617368223a22307866633934643864303363333131363531383732366464336138613134383638366434646535653332336266313132386233663730333137626564663535623134227d")
		header7155389, _ := hex.DecodeString("7b22706172656e7448617368223a22307866633934643864303363333131363531383732366464336138613134383638366434646535653332336266313132386233663730333137626564663535623134222c2273686133556e636c6573223a22307831646363346465386465633735643761616238356235363762366363643431616433313234353162393438613734313366306131343266643430643439333437222c226d696e6572223a22307836333562343736346431393339646661636433613830313437323631353961626332373762656363222c227374617465526f6f74223a22307831626336356138356534303766336538623236643862343438653738366361613732393737633566663964353137336161316438323662336633643261646536222c227472616e73616374696f6e73526f6f74223a22307866656231663166666431306531393062373065663766313137663139653239663066323234353633626265666238383537633663303239326331383839366430222c227265636569707473526f6f74223a22307863353338643336656431616366366332383138373131306132646533653564663730376436643338393832663433366562306462376136323366396463326364222c226c6f6773426c6f6f6d223ac22646966666963756c7479223a22307864346637623832222c226e756d626572223a223078366432656264222c226761734c696d6974223a223078376131323164222c2267617355736564223a2230783333343530222c2274696d657374616d70223a2230783565323462326166222c22657874726144617461223a2230786465383330323035306438663530363137323639373437393264343537343638363537323635373536643836333132653333333832653330383236633639222c226d697848617368223a22307832643439313738366166383636636466343133623265623066656133393732313338346663653037363332663364663936356361316166333966396166393632222c226e6f6e6365223a22307832376132383132336536353139633562222c2268617368223a22307836343162356462396663326562326535356634393237373666663232333531316237346163626661393263396237633334303663643565613862643366636135227d")
		header7155390, _ := hex.DecodeString("7b22706172656e7448617368223a22307836343162356462396663326562326535356634393237373666663232333531316237346163626661393263396237633334303663643565613862643366636135222c2273686133556e636c6573223a22307831646363346465386465633735643761616238356235363762366363643431616433313234353162393438613734313366306131343266643430643439333437222c226d696e6572223a22307836333562343736346431393339646661636433613830313437323631353961626332373762656363222c227374617465526f6f74223a22307864396434316464343433373733656562666633393366613735633232323665306334326561633739323935363963663765373438633035616232363232666530222c227472616e73616374696f6e73526f6f74223a22307835306636366265313462343232626134323565386637643137613965396363653039313866343938366435313863656163633431353337313531323834316265222c227265636569707473526f6f74223a22307864376231646139376233666638623764653461633061396133343736333032303266633030643630336663303838303631333232636635346666396265306337222c226c6f6773426c6f6f6d223ac22646966666963756c7479223a22307864346637623832222c226e756d626572223a223078366432656265222c226761734c696d6974223a223078376131323164222c2267617355736564223a2230783438613138222c2274696d657374616d70223a2230783565323462326261222c22657874726144617461223a2230786465383330323035306438663530363137323639373437393264343537343638363537323635373536643836333132653333333832653330383236633639222c226d697848617368223a22307831323338353461356265666262386333306564623637396564393432326137363136646564376263663236643335333764643233656137333261626162386631222c226e6f6e6365223a22307832376132383132336531373434396335222c2268617368223a22307835373466313831623837313536613531653464343032633238646431313832396566363130396265636631666337326335633134393532663237326531656636227d")
		header7155391, _ := hex.DecodeString("7b22706172656e7448617368223a22307835373466313831623837313536613531653464343032633238646431313832396566363130396265636631666337326335633134393532663237326531656636222c2273686133556e636c6573223a22307831646363346465386465633735643761616238356235363762366363643431616433313234353162393438613734313366306131343266643430643439333437222c226d696e6572223a22307836333562343736346431393339646661636433613830313437323631353961626332373762656363222c227374617465526f6f74223a22307837636263653763663561373639343131663939666232373465396635633430656265343337376665373136383238353934666534313137396330643133393238222c227472616e73616374696f6e73526f6f74223a22307833343832653965393334316165366238326361353663393332383534616330393533333931396161623139323264616665353039646633323434326339353464222c227265636569707473526f6f74223a22307863353361393861373730613065636135656564353065636364666463333636343437393864353439383332666465663765353838333435336338396363326165222c226c6f6773426c6f6f6d223ac22646966666963756c7479223a22307864353132353731222c226e756d626572223a223078366432656266222c226761734c696d6974223a223078376131323164222c2267617355736564223a2230783239303430222c2274696d657374616d70223a2230783565323462326265222c22657874726144617461223a2230786465383330323035306438663530363137323639373437393264343537343638363537323635373536643836333132653333333832653330383236633639222c226d697848617368223a22307862363664373462653932346561396262356239393535653836393666653766326436333164326638323262343731633039373661343737633865613332313965222c226e6f6e6365223a22307832376132383132336562653037626233222c2268617368223a22307865366163656266363839386536326239363532626535366239626338316432323135363237656264346330616437323437613031376339363636623731333163227d")
		param := new(scom.SyncBlockHeaderParam)
		param.ChainID = 2
		param.Address = acct.Address
		param.Headers = append(param.Headers, header7155388)
		param.Headers = append(param.Headers, header7155389)
		param.Headers = append(param.Headers, header7155390)
		param.Headers = append(param.Headers, header7155391)
		sink := common.NewZeroCopySink(nil)
		param.Serialization(sink)

		native = NewNative(sink.Bytes(), nil, native.GetCacheDB())
		err := ethHandler.SyncBlockHeader(native)
		assert.Equal(t, SUCCESS, typeOfError(err))
		height := getLatestHeight(native)
		assert.Equal(t, uint64(7155391), height)

		//
		header7155387Hash := getHeaderHashByHeight(native, 7155387)
		assert.Equal(t, true, bytes.Equal(ethcommon.HexToHash("74b4316641def3d60fe54b9a3fa52b14c71b0a6034c36a403512601bf06b1137").Bytes(), header7155387Hash.Bytes()))
		header7155388Hash := getHeaderHashByHeight(native, 7155388)
		assert.Equal(t, true, bytes.Equal(ethcommon.HexToHash("fc94d8d03c3116518726dd3a8a148686d4de5e323bf1128b3f70317bedf55b14").Bytes(), header7155388Hash.Bytes()))
		header7155389Hash := getHeaderHashByHeight(native, 7155389)
		assert.Equal(t, true, bytes.Equal(ethcommon.HexToHash("641b5db9fc2eb2e55f492776ff223511b74acbfa92c9b7c3406cd5ea8bd3fca5").Bytes(), header7155389Hash.Bytes()))
		header7155390Hash := getHeaderHashByHeight(native, 7155390)
		assert.Equal(t, true, bytes.Equal(ethcommon.HexToHash("574f181b87156a51e4d402c28dd11829ef6109becf1fc72c5c14952f272e1ef6").Bytes(), header7155390Hash.Bytes()))
		header7155391Hash := getHeaderHashByHeight(native, 7155391)
		assert.Equal(t, true, bytes.Equal(ethcommon.HexToHash("e6acebf6898e62b9652be56b9bc81d2215627ebd4c0ad7247a017c9666b7131c").Bytes(), header7155391Hash.Bytes()))
	}
}
